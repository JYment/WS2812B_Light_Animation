
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000004ee  00800100  00000f30  00000fc4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f30  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001e7  008005ee  008005ee  000014b2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000014b2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001510  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00001550  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000014b5  00000000  00000000  00001638  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a4c  00000000  00000000  00002aed  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c9e  00000000  00000000  00003539  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000368  00000000  00000000  000041d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000768  00000000  00000000  00004540  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000011bb  00000000  00000000  00004ca8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00005e63  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 c7 01 	jmp	0x38e	; 0x38e <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 14 01 	jmp	0x228	; 0x228 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	15 e0       	ldi	r17, 0x05	; 5
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e3       	ldi	r30, 0x30	; 48
  7c:	ff e0       	ldi	r31, 0x0F	; 15
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 3e       	cpi	r26, 0xEE	; 238
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	27 e0       	ldi	r18, 0x07	; 7
  8c:	ae ee       	ldi	r26, 0xEE	; 238
  8e:	b5 e0       	ldi	r27, 0x05	; 5
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a5 3d       	cpi	r26, 0xD5	; 213
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 29 04 	call	0x852	; 0x852 <main>
  9e:	0c 94 96 07 	jmp	0xf2c	; 0xf2c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <USART_Init>:
  a6:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  aa:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  ae:	88 e9       	ldi	r24, 0x98	; 152
  b0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  b4:	8e e0       	ldi	r24, 0x0E	; 14
  b6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  ba:	08 95       	ret

000000bc <USART_Transmit_char>:
  bc:	e0 ec       	ldi	r30, 0xC0	; 192
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	90 81       	ld	r25, Z
  c2:	95 ff       	sbrs	r25, 5
  c4:	fd cf       	rjmp	.-6      	; 0xc0 <USART_Transmit_char+0x4>
  c6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  ca:	08 95       	ret

000000cc <nibbleToHexChar>:
  cc:	8a 30       	cpi	r24, 0x0A	; 10
  ce:	10 f4       	brcc	.+4      	; 0xd4 <nibbleToHexChar+0x8>
  d0:	80 5d       	subi	r24, 0xD0	; 208
  d2:	08 95       	ret
  d4:	89 5c       	subi	r24, 0xC9	; 201
  d6:	08 95       	ret

000000d8 <translateChartoASCII>:
  d8:	cf 93       	push	r28
  da:	df 93       	push	r29
  dc:	c8 2f       	mov	r28, r24
  de:	82 95       	swap	r24
  e0:	8f 70       	andi	r24, 0x0F	; 15
  e2:	0e 94 66 00 	call	0xcc	; 0xcc <nibbleToHexChar>
  e6:	d8 2f       	mov	r29, r24
  e8:	8c 2f       	mov	r24, r28
  ea:	8f 70       	andi	r24, 0x0F	; 15
  ec:	0e 94 66 00 	call	0xcc	; 0xcc <nibbleToHexChar>
  f0:	c8 2f       	mov	r28, r24
  f2:	8d 2f       	mov	r24, r29
  f4:	0e 94 5e 00 	call	0xbc	; 0xbc <USART_Transmit_char>
  f8:	8c 2f       	mov	r24, r28
  fa:	0e 94 5e 00 	call	0xbc	; 0xbc <USART_Transmit_char>
  fe:	df 91       	pop	r29
 100:	cf 91       	pop	r28
 102:	08 95       	ret

00000104 <USART_Transmit_str>:
 104:	cf 93       	push	r28
 106:	df 93       	push	r29
 108:	ec 01       	movw	r28, r24
 10a:	6a 30       	cpi	r22, 0x0A	; 10
 10c:	51 f4       	brne	.+20     	; 0x122 <USART_Transmit_str+0x1e>
 10e:	88 81       	ld	r24, Y
 110:	88 23       	and	r24, r24
 112:	91 f0       	breq	.+36     	; 0x138 <USART_Transmit_str+0x34>
 114:	21 96       	adiw	r28, 0x01	; 1
 116:	0e 94 5e 00 	call	0xbc	; 0xbc <USART_Transmit_char>
 11a:	89 91       	ld	r24, Y+
 11c:	81 11       	cpse	r24, r1
 11e:	fb cf       	rjmp	.-10     	; 0x116 <USART_Transmit_str+0x12>
 120:	0b c0       	rjmp	.+22     	; 0x138 <USART_Transmit_str+0x34>
 122:	6b 30       	cpi	r22, 0x0B	; 11
 124:	49 f4       	brne	.+18     	; 0x138 <USART_Transmit_str+0x34>
 126:	88 81       	ld	r24, Y
 128:	88 23       	and	r24, r24
 12a:	31 f0       	breq	.+12     	; 0x138 <USART_Transmit_str+0x34>
 12c:	21 96       	adiw	r28, 0x01	; 1
 12e:	0e 94 6c 00 	call	0xd8	; 0xd8 <translateChartoASCII>
 132:	89 91       	ld	r24, Y+
 134:	81 11       	cpse	r24, r1
 136:	fb cf       	rjmp	.-10     	; 0x12e <USART_Transmit_str+0x2a>
 138:	df 91       	pop	r29
 13a:	cf 91       	pop	r28
 13c:	08 95       	ret

0000013e <__vector_18>:
 13e:	1f 92       	push	r1
 140:	0f 92       	push	r0
 142:	0f b6       	in	r0, 0x3f	; 63
 144:	0f 92       	push	r0
 146:	11 24       	eor	r1, r1
 148:	2f 93       	push	r18
 14a:	3f 93       	push	r19
 14c:	4f 93       	push	r20
 14e:	5f 93       	push	r21
 150:	6f 93       	push	r22
 152:	7f 93       	push	r23
 154:	8f 93       	push	r24
 156:	9f 93       	push	r25
 158:	af 93       	push	r26
 15a:	bf 93       	push	r27
 15c:	ef 93       	push	r30
 15e:	ff 93       	push	r31
 160:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 164:	80 93 30 06 	sts	0x0630, r24	; 0x800630 <rx_data>
 168:	e0 91 fd 05 	lds	r30, 0x05FD	; 0x8005fd <rx_cnt>
 16c:	91 e0       	ldi	r25, 0x01	; 1
 16e:	9e 0f       	add	r25, r30
 170:	90 93 fd 05 	sts	0x05FD, r25	; 0x8005fd <rx_cnt>
 174:	f0 e0       	ldi	r31, 0x00	; 0
 176:	e2 50       	subi	r30, 0x02	; 2
 178:	fa 4f       	sbci	r31, 0xFA	; 250
 17a:	80 83       	st	Z, r24
 17c:	0e 94 5e 00 	call	0xbc	; 0xbc <USART_Transmit_char>
 180:	80 91 fd 05 	lds	r24, 0x05FD	; 0x8005fd <rx_cnt>
 184:	83 30       	cpi	r24, 0x03	; 3
 186:	91 f4       	brne	.+36     	; 0x1ac <__vector_18+0x6e>
 188:	e1 e3       	ldi	r30, 0x31	; 49
 18a:	f6 e0       	ldi	r31, 0x06	; 6
 18c:	ae ef       	ldi	r26, 0xFE	; 254
 18e:	b5 e0       	ldi	r27, 0x05	; 5
 190:	8d 91       	ld	r24, X+
 192:	9c 91       	ld	r25, X
 194:	11 97       	sbiw	r26, 0x01	; 1
 196:	91 83       	std	Z+1, r25	; 0x01
 198:	80 83       	st	Z, r24
 19a:	12 96       	adiw	r26, 0x02	; 2
 19c:	8c 91       	ld	r24, X
 19e:	82 83       	std	Z+2, r24	; 0x02
 1a0:	13 82       	std	Z+3, r1	; 0x03
 1a2:	10 92 fd 05 	sts	0x05FD, r1	; 0x8005fd <rx_cnt>
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	80 93 ee 05 	sts	0x05EE, r24	; 0x8005ee <__data_end>
 1ac:	ff 91       	pop	r31
 1ae:	ef 91       	pop	r30
 1b0:	bf 91       	pop	r27
 1b2:	af 91       	pop	r26
 1b4:	9f 91       	pop	r25
 1b6:	8f 91       	pop	r24
 1b8:	7f 91       	pop	r23
 1ba:	6f 91       	pop	r22
 1bc:	5f 91       	pop	r21
 1be:	4f 91       	pop	r20
 1c0:	3f 91       	pop	r19
 1c2:	2f 91       	pop	r18
 1c4:	0f 90       	pop	r0
 1c6:	0f be       	out	0x3f, r0	; 63
 1c8:	0f 90       	pop	r0
 1ca:	1f 90       	pop	r1
 1cc:	18 95       	reti

000001ce <ws2812_setleds>:
   ws2812_setleds_pin(ledarray,leds, _BV(ws2812_pin));
}

void inline ws2812_setleds_pin(struct cRGB *ledarray, uint16_t leds, uint8_t pinmask)
{
  ws2812_sendarray_mask((uint8_t*)ledarray,leds+leds+leds,pinmask);
 1ce:	9b 01       	movw	r18, r22
 1d0:	22 0f       	add	r18, r18
 1d2:	33 1f       	adc	r19, r19
 1d4:	62 0f       	add	r22, r18
 1d6:	73 1f       	adc	r23, r19
void inline ws2812_sendarray_mask(uint8_t *data,uint16_t datlen,uint8_t maskhi)
{
  uint8_t curbyte,ctr,masklo;
  uint8_t sreg_prev;
  
  ws2812_DDRREG |= maskhi; // Enable output
 1d8:	57 9a       	sbi	0x0a, 7	; 10
  
  masklo =~maskhi&ws2812_PORTREG;
 1da:	2b b1       	in	r18, 0x0b	; 11
 1dc:	2f 77       	andi	r18, 0x7F	; 127
  maskhi |=        ws2812_PORTREG;
 1de:	3b b1       	in	r19, 0x0b	; 11
 1e0:	30 68       	ori	r19, 0x80	; 128
  
  sreg_prev=SREG;
 1e2:	4f b7       	in	r20, 0x3f	; 63
  cli();  
 1e4:	f8 94       	cli

  while (datlen--) {
 1e6:	61 15       	cp	r22, r1
 1e8:	71 05       	cpc	r23, r1
 1ea:	b1 f0       	breq	.+44     	; 0x218 <loop54+0x22>
 1ec:	fc 01       	movw	r30, r24
 1ee:	68 0f       	add	r22, r24
 1f0:	79 1f       	adc	r23, r25
    curbyte=*data++;
 1f2:	91 91       	ld	r25, Z+
    
    asm volatile(
 1f4:	88 e0       	ldi	r24, 0x08	; 8

000001f6 <loop54>:
 1f6:	3b b9       	out	0x0b, r19	; 11
 1f8:	00 00       	nop
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <loop54+0x6>
 1fc:	97 ff       	sbrs	r25, 7
 1fe:	2b b9       	out	0x0b, r18	; 11
 200:	99 0f       	add	r25, r25
 202:	00 00       	nop
 204:	00 c0       	rjmp	.+0      	; 0x206 <loop54+0x10>
 206:	00 c0       	rjmp	.+0      	; 0x208 <loop54+0x12>
 208:	00 c0       	rjmp	.+0      	; 0x20a <loop54+0x14>
 20a:	2b b9       	out	0x0b, r18	; 11
 20c:	00 c0       	rjmp	.+0      	; 0x20e <loop54+0x18>
 20e:	8a 95       	dec	r24
 210:	91 f7       	brne	.-28     	; 0x1f6 <loop54>
  maskhi |=        ws2812_PORTREG;
  
  sreg_prev=SREG;
  cli();  

  while (datlen--) {
 212:	e6 17       	cp	r30, r22
 214:	f7 07       	cpc	r31, r23
 216:	69 f7       	brne	.-38     	; 0x1f2 <ws2812_setleds+0x24>
    :	"=&d" (ctr)
    :	"r" (curbyte), "I" (_SFR_IO_ADDR(ws2812_PORTREG)), "r" (maskhi), "r" (masklo)
    );
  }
  
  SREG=sreg_prev;
 218:	4f bf       	out	0x3f, r20	; 63
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 21a:	8f ea       	ldi	r24, 0xAF	; 175
 21c:	94 e0       	ldi	r25, 0x04	; 4
 21e:	01 97       	sbiw	r24, 0x01	; 1
 220:	f1 f7       	brne	.-4      	; 0x21e <loop54+0x28>
 222:	00 c0       	rjmp	.+0      	; 0x224 <loop54+0x2e>
 224:	00 00       	nop
 226:	08 95       	ret

00000228 <__vector_14>:
};*/

char temp[40];

ISR(TIMER0_COMPA_vect)
{
 228:	1f 92       	push	r1
 22a:	0f 92       	push	r0
 22c:	0f b6       	in	r0, 0x3f	; 63
 22e:	0f 92       	push	r0
 230:	11 24       	eor	r1, r1
 232:	2f 93       	push	r18
 234:	3f 93       	push	r19
 236:	4f 93       	push	r20
 238:	5f 93       	push	r21
 23a:	6f 93       	push	r22
 23c:	7f 93       	push	r23
 23e:	8f 93       	push	r24
 240:	9f 93       	push	r25
 242:	af 93       	push	r26
 244:	bf 93       	push	r27
 246:	ef 93       	push	r30
 248:	ff 93       	push	r31
	time_cnt++;
 24a:	80 91 f1 05 	lds	r24, 0x05F1	; 0x8005f1 <time_cnt>
 24e:	8f 5f       	subi	r24, 0xFF	; 255
 250:	80 93 f1 05 	sts	0x05F1, r24	; 0x8005f1 <time_cnt>
	if(time_cnt%20 == 0)		PORTB ^= (1 << PORTB5);
 254:	20 91 f1 05 	lds	r18, 0x05F1	; 0x8005f1 <time_cnt>
 258:	8d ec       	ldi	r24, 0xCD	; 205
 25a:	28 9f       	mul	r18, r24
 25c:	81 2d       	mov	r24, r1
 25e:	11 24       	eor	r1, r1
 260:	82 95       	swap	r24
 262:	8f 70       	andi	r24, 0x0F	; 15
 264:	88 0f       	add	r24, r24
 266:	88 0f       	add	r24, r24
 268:	98 2f       	mov	r25, r24
 26a:	99 0f       	add	r25, r25
 26c:	99 0f       	add	r25, r25
 26e:	89 0f       	add	r24, r25
 270:	28 13       	cpse	r18, r24
 272:	04 c0       	rjmp	.+8      	; 0x27c <__vector_14+0x54>
 274:	95 b1       	in	r25, 0x05	; 5
 276:	80 e2       	ldi	r24, 0x20	; 32
 278:	89 27       	eor	r24, r25
 27a:	85 b9       	out	0x05, r24	; 5
	if(time_cnt == 100)
 27c:	80 91 f1 05 	lds	r24, 0x05F1	; 0x8005f1 <time_cnt>
 280:	84 36       	cpi	r24, 0x64	; 100
 282:	39 f4       	brne	.+14     	; 0x292 <__vector_14+0x6a>
	{
		time_sec++;
 284:	80 91 f0 05 	lds	r24, 0x05F0	; 0x8005f0 <time_sec>
 288:	8f 5f       	subi	r24, 0xFF	; 255
 28a:	80 93 f0 05 	sts	0x05F0, r24	; 0x8005f0 <time_sec>
		time_cnt = 0;
 28e:	10 92 f1 05 	sts	0x05F1, r1	; 0x8005f1 <time_cnt>
	}
	if(time_sec == 60)
 292:	80 91 f0 05 	lds	r24, 0x05F0	; 0x8005f0 <time_sec>
 296:	8c 33       	cpi	r24, 0x3C	; 60
 298:	39 f4       	brne	.+14     	; 0x2a8 <__vector_14+0x80>
	{
		time_min++;
 29a:	80 91 ef 05 	lds	r24, 0x05EF	; 0x8005ef <time_min>
 29e:	8f 5f       	subi	r24, 0xFF	; 255
 2a0:	80 93 ef 05 	sts	0x05EF, r24	; 0x8005ef <time_min>
		time_sec = 0;
 2a4:	10 92 f0 05 	sts	0x05F0, r1	; 0x8005f0 <time_sec>
	}
	
	if(main_btn_mode == 1)
 2a8:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <main_btn_mode>
 2ac:	81 30       	cpi	r24, 0x01	; 1
 2ae:	09 f0       	breq	.+2      	; 0x2b2 <__vector_14+0x8a>
 2b0:	50 c0       	rjmp	.+160    	; 0x352 <__vector_14+0x12a>
	{
		if(timer_btn_mode == 1)
 2b2:	80 91 f4 05 	lds	r24, 0x05F4	; 0x8005f4 <timer_btn_mode>
 2b6:	81 30       	cpi	r24, 0x01	; 1
 2b8:	29 f5       	brne	.+74     	; 0x304 <__vector_14+0xdc>
		{
			if(time_min == TIME_SET_A)
 2ba:	80 91 ef 05 	lds	r24, 0x05EF	; 0x8005ef <time_min>
 2be:	85 30       	cpi	r24, 0x05	; 5
 2c0:	09 f0       	breq	.+2      	; 0x2c4 <__vector_14+0x9c>
 2c2:	47 c0       	rjmp	.+142    	; 0x352 <__vector_14+0x12a>
			{
				sprintf(temp, "--- main_mode  :  %dmin OFF  ---\n", time_min);
 2c4:	80 91 ef 05 	lds	r24, 0x05EF	; 0x8005ef <time_min>
 2c8:	1f 92       	push	r1
 2ca:	8f 93       	push	r24
 2cc:	81 e7       	ldi	r24, 0x71	; 113
 2ce:	94 e0       	ldi	r25, 0x04	; 4
 2d0:	9f 93       	push	r25
 2d2:	8f 93       	push	r24
 2d4:	83 e6       	ldi	r24, 0x63	; 99
 2d6:	96 e0       	ldi	r25, 0x06	; 6
 2d8:	9f 93       	push	r25
 2da:	8f 93       	push	r24
 2dc:	0e 94 ac 04 	call	0x958	; 0x958 <sprintf>
				USART_Transmit_str(temp, _ASCII);
 2e0:	6a e0       	ldi	r22, 0x0A	; 10
 2e2:	83 e6       	ldi	r24, 0x63	; 99
 2e4:	96 e0       	ldi	r25, 0x06	; 6
 2e6:	0e 94 82 00 	call	0x104	; 0x104 <USART_Transmit_str>
				main_btn_mode  = MODE_DEFAULT;
 2ea:	10 92 f6 05 	sts	0x05F6, r1	; 0x8005f6 <main_btn_mode>
				led_btn_mode   = MODE_DEFAULT;
 2ee:	10 92 f5 05 	sts	0x05F5, r1	; 0x8005f5 <led_btn_mode>
				timer_btn_mode = MODE_DEFAULT;
 2f2:	10 92 f4 05 	sts	0x05F4, r1	; 0x8005f4 <timer_btn_mode>
 2f6:	0f 90       	pop	r0
 2f8:	0f 90       	pop	r0
 2fa:	0f 90       	pop	r0
 2fc:	0f 90       	pop	r0
 2fe:	0f 90       	pop	r0
 300:	0f 90       	pop	r0
 302:	27 c0       	rjmp	.+78     	; 0x352 <__vector_14+0x12a>
			}
		}
		else if(timer_btn_mode == 2)
 304:	80 91 f4 05 	lds	r24, 0x05F4	; 0x8005f4 <timer_btn_mode>
 308:	82 30       	cpi	r24, 0x02	; 2
 30a:	19 f5       	brne	.+70     	; 0x352 <__vector_14+0x12a>
		{
			if(time_min == TIME_SET_B)
 30c:	80 91 ef 05 	lds	r24, 0x05EF	; 0x8005ef <time_min>
 310:	8a 30       	cpi	r24, 0x0A	; 10
 312:	f9 f4       	brne	.+62     	; 0x352 <__vector_14+0x12a>
			{
				sprintf(temp, "--- main_mode  :  %dmin OFF  ---\n", time_min);
 314:	80 91 ef 05 	lds	r24, 0x05EF	; 0x8005ef <time_min>
 318:	1f 92       	push	r1
 31a:	8f 93       	push	r24
 31c:	81 e7       	ldi	r24, 0x71	; 113
 31e:	94 e0       	ldi	r25, 0x04	; 4
 320:	9f 93       	push	r25
 322:	8f 93       	push	r24
 324:	83 e6       	ldi	r24, 0x63	; 99
 326:	96 e0       	ldi	r25, 0x06	; 6
 328:	9f 93       	push	r25
 32a:	8f 93       	push	r24
 32c:	0e 94 ac 04 	call	0x958	; 0x958 <sprintf>
				USART_Transmit_str(temp, _ASCII);
 330:	6a e0       	ldi	r22, 0x0A	; 10
 332:	83 e6       	ldi	r24, 0x63	; 99
 334:	96 e0       	ldi	r25, 0x06	; 6
 336:	0e 94 82 00 	call	0x104	; 0x104 <USART_Transmit_str>
				main_btn_mode  = MODE_DEFAULT;
 33a:	10 92 f6 05 	sts	0x05F6, r1	; 0x8005f6 <main_btn_mode>
				led_btn_mode   = MODE_DEFAULT;
 33e:	10 92 f5 05 	sts	0x05F5, r1	; 0x8005f5 <led_btn_mode>
				timer_btn_mode = MODE_DEFAULT;
 342:	10 92 f4 05 	sts	0x05F4, r1	; 0x8005f4 <timer_btn_mode>
 346:	0f 90       	pop	r0
 348:	0f 90       	pop	r0
 34a:	0f 90       	pop	r0
 34c:	0f 90       	pop	r0
 34e:	0f 90       	pop	r0
 350:	0f 90       	pop	r0
			}
		}
	}
	
	if(main_btn_mode == 0 && led_btn_mode == 0 && timer_btn_mode == 0)	PORTB &= ~(1 << PORTB5);
 352:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <main_btn_mode>
 356:	81 11       	cpse	r24, r1
 358:	09 c0       	rjmp	.+18     	; 0x36c <__vector_14+0x144>
 35a:	80 91 f5 05 	lds	r24, 0x05F5	; 0x8005f5 <led_btn_mode>
 35e:	81 11       	cpse	r24, r1
 360:	05 c0       	rjmp	.+10     	; 0x36c <__vector_14+0x144>
 362:	80 91 f4 05 	lds	r24, 0x05F4	; 0x8005f4 <timer_btn_mode>
 366:	81 11       	cpse	r24, r1
 368:	01 c0       	rjmp	.+2      	; 0x36c <__vector_14+0x144>
 36a:	2d 98       	cbi	0x05, 5	; 5
}
 36c:	ff 91       	pop	r31
 36e:	ef 91       	pop	r30
 370:	bf 91       	pop	r27
 372:	af 91       	pop	r26
 374:	9f 91       	pop	r25
 376:	8f 91       	pop	r24
 378:	7f 91       	pop	r23
 37a:	6f 91       	pop	r22
 37c:	5f 91       	pop	r21
 37e:	4f 91       	pop	r20
 380:	3f 91       	pop	r19
 382:	2f 91       	pop	r18
 384:	0f 90       	pop	r0
 386:	0f be       	out	0x3f, r0	; 63
 388:	0f 90       	pop	r0
 38a:	1f 90       	pop	r1
 38c:	18 95       	reti

0000038e <__vector_11>:

ISR(TIMER1_COMPA_vect)
{
 38e:	1f 92       	push	r1
 390:	0f 92       	push	r0
 392:	0f b6       	in	r0, 0x3f	; 63
 394:	0f 92       	push	r0
 396:	11 24       	eor	r1, r1
 398:	2f 93       	push	r18
 39a:	3f 93       	push	r19
 39c:	4f 93       	push	r20
 39e:	5f 93       	push	r21
 3a0:	6f 93       	push	r22
 3a2:	7f 93       	push	r23
 3a4:	8f 93       	push	r24
 3a6:	9f 93       	push	r25
 3a8:	af 93       	push	r26
 3aa:	bf 93       	push	r27
 3ac:	ef 93       	push	r30
 3ae:	ff 93       	push	r31
	// ************************** MAIN_BTN PROCESS ************************** //
// 	sprintf(temp, "--- Now dimming = %d\n", dimming);
// 	USART_Transmit_str(temp, _ASCII);
	
	if(!MAIN_BTN)
 3b0:	4a 99       	sbic	0x09, 2	; 9
 3b2:	15 c0       	rjmp	.+42     	; 0x3de <__vector_11+0x50>
	{
		if(main_btn_flag == 0)
 3b4:	80 91 fc 05 	lds	r24, 0x05FC	; 0x8005fc <main_btn_flag>
 3b8:	81 11       	cpse	r24, r1
 3ba:	06 c0       	rjmp	.+12     	; 0x3c8 <__vector_11+0x3a>
		{
			main_btn_flag = 1;
 3bc:	81 e0       	ldi	r24, 0x01	; 1
 3be:	80 93 fc 05 	sts	0x05FC, r24	; 0x8005fc <main_btn_flag>
			main_btn_cnt = 0;
 3c2:	10 92 f9 05 	sts	0x05F9, r1	; 0x8005f9 <main_btn_cnt>
 3c6:	54 c0       	rjmp	.+168    	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
		}
		else
		{
			if(main_btn_cnt < 60)	main_btn_cnt++;
 3c8:	80 91 f9 05 	lds	r24, 0x05F9	; 0x8005f9 <main_btn_cnt>
 3cc:	8c 33       	cpi	r24, 0x3C	; 60
 3ce:	08 f0       	brcs	.+2      	; 0x3d2 <__vector_11+0x44>
 3d0:	4f c0       	rjmp	.+158    	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 3d2:	80 91 f9 05 	lds	r24, 0x05F9	; 0x8005f9 <main_btn_cnt>
 3d6:	8f 5f       	subi	r24, 0xFF	; 255
 3d8:	80 93 f9 05 	sts	0x05F9, r24	; 0x8005f9 <main_btn_cnt>
 3dc:	49 c0       	rjmp	.+146    	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
		}
	}
	else
	{
		main_btn_flag = 0;
 3de:	10 92 fc 05 	sts	0x05FC, r1	; 0x8005fc <main_btn_flag>
		if(main_btn_cnt)
 3e2:	80 91 f9 05 	lds	r24, 0x05F9	; 0x8005f9 <main_btn_cnt>
 3e6:	88 23       	and	r24, r24
 3e8:	09 f4       	brne	.+2      	; 0x3ec <__vector_11+0x5e>
 3ea:	40 c0       	rjmp	.+128    	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
		{
			if(main_btn_cnt >= 20)		// main_btn 길게 누름
 3ec:	80 91 f9 05 	lds	r24, 0x05F9	; 0x8005f9 <main_btn_cnt>
 3f0:	84 31       	cpi	r24, 0x14	; 20
 3f2:	98 f0       	brcs	.+38     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
			{
				// Bluetooth ON
				if(main_btn_mode == 1)
 3f4:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <main_btn_mode>
 3f8:	81 30       	cpi	r24, 0x01	; 1
 3fa:	c1 f5       	brne	.+112    	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
				{
					sprintf(temp, "--- main_btn_mode  :  Bluetooth ON ---\n");
 3fc:	88 e2       	ldi	r24, 0x28	; 40
 3fe:	e3 eb       	ldi	r30, 0xB3	; 179
 400:	f5 e0       	ldi	r31, 0x05	; 5
 402:	a3 e6       	ldi	r26, 0x63	; 99
 404:	b6 e0       	ldi	r27, 0x06	; 6
 406:	01 90       	ld	r0, Z+
 408:	0d 92       	st	X+, r0
 40a:	8a 95       	dec	r24
 40c:	e1 f7       	brne	.-8      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
					USART_Transmit_str(temp, _ASCII);
 40e:	6a e0       	ldi	r22, 0x0A	; 10
 410:	83 e6       	ldi	r24, 0x63	; 99
 412:	96 e0       	ldi	r25, 0x06	; 6
 414:	0e 94 82 00 	call	0x104	; 0x104 <USART_Transmit_str>
 418:	29 c0       	rjmp	.+82     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
				}
			}
			else								// main_btn 짧게 누름
			{
				if(main_btn_mode == 0)
 41a:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <main_btn_mode>
 41e:	81 11       	cpse	r24, r1
 420:	11 c0       	rjmp	.+34     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
				{
					main_btn_mode = 1;			// 전원 ON
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	80 93 f6 05 	sts	0x05F6, r24	; 0x8005f6 <main_btn_mode>
					led_btn_mode = 1;			// led mode = ON
 428:	80 93 f5 05 	sts	0x05F5, r24	; 0x8005f5 <led_btn_mode>
					dimming = 1;
 42c:	80 93 70 04 	sts	0x0470, r24	; 0x800470 <dimming>
					sprintf(temp, "--- main_mode  :  ON  ---\n");
 430:	8b e1       	ldi	r24, 0x1B	; 27
 432:	e3 e9       	ldi	r30, 0x93	; 147
 434:	f4 e0       	ldi	r31, 0x04	; 4
 436:	a3 e6       	ldi	r26, 0x63	; 99
 438:	b6 e0       	ldi	r27, 0x06	; 6
 43a:	01 90       	ld	r0, Z+
 43c:	0d 92       	st	X+, r0
 43e:	8a 95       	dec	r24
 440:	e1 f7       	brne	.-8      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 442:	0f c0       	rjmp	.+30     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
				}
				else 
				{
					main_btn_mode  = MODE_DEFAULT;
 444:	10 92 f6 05 	sts	0x05F6, r1	; 0x8005f6 <main_btn_mode>
					led_btn_mode   = MODE_DEFAULT;
 448:	10 92 f5 05 	sts	0x05F5, r1	; 0x8005f5 <led_btn_mode>
					timer_btn_mode = MODE_DEFAULT;
 44c:	10 92 f4 05 	sts	0x05F4, r1	; 0x8005f4 <timer_btn_mode>
					sprintf(temp, "--- main_mode  :  OFF ---\n");
 450:	8b e1       	ldi	r24, 0x1B	; 27
 452:	ee ea       	ldi	r30, 0xAE	; 174
 454:	f4 e0       	ldi	r31, 0x04	; 4
 456:	a3 e6       	ldi	r26, 0x63	; 99
 458:	b6 e0       	ldi	r27, 0x06	; 6
 45a:	01 90       	ld	r0, Z+
 45c:	0d 92       	st	X+, r0
 45e:	8a 95       	dec	r24
 460:	e1 f7       	brne	.-8      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
				}
				USART_Transmit_str(temp, _ASCII);
 462:	6a e0       	ldi	r22, 0x0A	; 10
 464:	83 e6       	ldi	r24, 0x63	; 99
 466:	96 e0       	ldi	r25, 0x06	; 6
 468:	0e 94 82 00 	call	0x104	; 0x104 <USART_Transmit_str>
			}
		}
		main_btn_cnt = 0;
 46c:	10 92 f9 05 	sts	0x05F9, r1	; 0x8005f9 <main_btn_cnt>
	}
	
	// ************************** LED_BTN PROCESS ************************** //
	if(!LED_BTN)
 470:	4b 99       	sbic	0x09, 3	; 9
 472:	48 c0       	rjmp	.+144    	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
	{
		if(led_btn_flag == 0)
 474:	80 91 fb 05 	lds	r24, 0x05FB	; 0x8005fb <led_btn_flag>
 478:	81 11       	cpse	r24, r1
 47a:	08 c0       	rjmp	.+16     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
		{
			led_btn_flag = 1;
 47c:	81 e0       	ldi	r24, 0x01	; 1
 47e:	80 93 fb 05 	sts	0x05FB, r24	; 0x8005fb <led_btn_flag>
			led_btn_cnt = 0;
 482:	10 92 f8 05 	sts	0x05F8, r1	; 0x8005f8 <led_btn_cnt>
			dimming_cnt = 0;
 486:	10 92 f2 05 	sts	0x05F2, r1	; 0x8005f2 <dimming_cnt>
 48a:	ed c0       	rjmp	.+474    	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
		}
		else
		{
			led_btn_cnt++;
 48c:	80 91 f8 05 	lds	r24, 0x05F8	; 0x8005f8 <led_btn_cnt>
 490:	8f 5f       	subi	r24, 0xFF	; 255
 492:	80 93 f8 05 	sts	0x05F8, r24	; 0x8005f8 <led_btn_cnt>
			if(led_btn_cnt > 5)
 496:	80 91 f8 05 	lds	r24, 0x05F8	; 0x8005f8 <led_btn_cnt>
 49a:	86 30       	cpi	r24, 0x06	; 6
 49c:	08 f4       	brcc	.+2      	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 49e:	e3 c0       	rjmp	.+454    	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
			{
				if(led_btn_mode == 1 || led_btn_mode == 2)
 4a0:	80 91 f5 05 	lds	r24, 0x05F5	; 0x8005f5 <led_btn_mode>
 4a4:	81 30       	cpi	r24, 0x01	; 1
 4a6:	29 f0       	breq	.+10     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4a8:	80 91 f5 05 	lds	r24, 0x05F5	; 0x8005f5 <led_btn_mode>
 4ac:	82 30       	cpi	r24, 0x02	; 2
 4ae:	09 f0       	breq	.+2      	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4b0:	da c0       	rjmp	.+436    	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
				{
					if(dimming_mode == 0)
 4b2:	80 91 f3 05 	lds	r24, 0x05F3	; 0x8005f3 <dimming_mode>
 4b6:	81 11       	cpse	r24, r1
 4b8:	13 c0       	rjmp	.+38     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
					{
						if(dimming > 0)
 4ba:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <dimming>
 4be:	88 23       	and	r24, r24
 4c0:	09 f4       	brne	.+2      	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4c2:	d1 c0       	rjmp	.+418    	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
						{
							dimming = dimming + 1;
 4c4:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <dimming>
 4c8:	8f 5f       	subi	r24, 0xFF	; 255
 4ca:	80 93 70 04 	sts	0x0470, r24	; 0x800470 <dimming>
							if(dimming > 99)	dimming = 100;
 4ce:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <dimming>
 4d2:	84 36       	cpi	r24, 0x64	; 100
 4d4:	08 f4       	brcc	.+2      	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4d6:	c7 c0       	rjmp	.+398    	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 4d8:	84 e6       	ldi	r24, 0x64	; 100
 4da:	80 93 70 04 	sts	0x0470, r24	; 0x800470 <dimming>
 4de:	c3 c0       	rjmp	.+390    	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
						}
					}
					else
					{
						if(dimming < 100)
 4e0:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <dimming>
 4e4:	84 36       	cpi	r24, 0x64	; 100
 4e6:	08 f0       	brcs	.+2      	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 4e8:	be c0       	rjmp	.+380    	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
						{
							dimming = dimming - 1;
 4ea:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <dimming>
 4ee:	81 50       	subi	r24, 0x01	; 1
 4f0:	80 93 70 04 	sts	0x0470, r24	; 0x800470 <dimming>
							if(dimming < 1)		dimming = 1;
 4f4:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <dimming>
 4f8:	81 11       	cpse	r24, r1
 4fa:	b5 c0       	rjmp	.+362    	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 4fc:	81 e0       	ldi	r24, 0x01	; 1
 4fe:	80 93 70 04 	sts	0x0470, r24	; 0x800470 <dimming>
 502:	b1 c0       	rjmp	.+354    	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
			}
		}
	}
	else
	{
		led_btn_flag = 0;
 504:	10 92 fb 05 	sts	0x05FB, r1	; 0x8005fb <led_btn_flag>
		if(led_btn_cnt)
 508:	80 91 f8 05 	lds	r24, 0x05F8	; 0x8005f8 <led_btn_cnt>
 50c:	88 23       	and	r24, r24
 50e:	09 f4       	brne	.+2      	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 510:	a6 c0       	rjmp	.+332    	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
		{
			if(led_btn_cnt > 10)
 512:	80 91 f8 05 	lds	r24, 0x05F8	; 0x8005f8 <led_btn_cnt>
 516:	8b 30       	cpi	r24, 0x0B	; 11
 518:	08 f4       	brcc	.+2      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 51a:	46 c0       	rjmp	.+140    	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
			{
				if(led_btn_mode == 1 || led_btn_mode == 2)
 51c:	80 91 f5 05 	lds	r24, 0x05F5	; 0x8005f5 <led_btn_mode>
 520:	81 30       	cpi	r24, 0x01	; 1
 522:	21 f0       	breq	.+8      	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 524:	80 91 f5 05 	lds	r24, 0x05F5	; 0x8005f5 <led_btn_mode>
 528:	82 30       	cpi	r24, 0x02	; 2
 52a:	39 f4       	brne	.+14     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
				{
					dimming_mode = !dimming_mode;
 52c:	90 91 f3 05 	lds	r25, 0x05F3	; 0x8005f3 <dimming_mode>
 530:	81 e0       	ldi	r24, 0x01	; 1
 532:	91 11       	cpse	r25, r1
 534:	80 e0       	ldi	r24, 0x00	; 0
 536:	80 93 f3 05 	sts	0x05F3, r24	; 0x8005f3 <dimming_mode>
				}
				if(led_btn_mode == 1)		sprintf(temp, "--- led_mode  :  ON  ---,  dimming = %d\n", dimming);
 53a:	80 91 f5 05 	lds	r24, 0x05F5	; 0x8005f5 <led_btn_mode>
 53e:	81 30       	cpi	r24, 0x01	; 1
 540:	a9 f4       	brne	.+42     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 542:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <dimming>
 546:	1f 92       	push	r1
 548:	8f 93       	push	r24
 54a:	89 ec       	ldi	r24, 0xC9	; 201
 54c:	94 e0       	ldi	r25, 0x04	; 4
 54e:	9f 93       	push	r25
 550:	8f 93       	push	r24
 552:	83 e6       	ldi	r24, 0x63	; 99
 554:	96 e0       	ldi	r25, 0x06	; 6
 556:	9f 93       	push	r25
 558:	8f 93       	push	r24
 55a:	0e 94 ac 04 	call	0x958	; 0x958 <sprintf>
 55e:	0f 90       	pop	r0
 560:	0f 90       	pop	r0
 562:	0f 90       	pop	r0
 564:	0f 90       	pop	r0
 566:	0f 90       	pop	r0
 568:	0f 90       	pop	r0
 56a:	18 c0       	rjmp	.+48     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
				else if(led_btn_mode == 2)	sprintf(temp, "--- led_mode  :  ANI ---,  dimming = %d\n", dimming);
 56c:	80 91 f5 05 	lds	r24, 0x05F5	; 0x8005f5 <led_btn_mode>
 570:	82 30       	cpi	r24, 0x02	; 2
 572:	a1 f4       	brne	.+40     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 574:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <dimming>
 578:	1f 92       	push	r1
 57a:	8f 93       	push	r24
 57c:	82 ef       	ldi	r24, 0xF2	; 242
 57e:	94 e0       	ldi	r25, 0x04	; 4
 580:	9f 93       	push	r25
 582:	8f 93       	push	r24
 584:	83 e6       	ldi	r24, 0x63	; 99
 586:	96 e0       	ldi	r25, 0x06	; 6
 588:	9f 93       	push	r25
 58a:	8f 93       	push	r24
 58c:	0e 94 ac 04 	call	0x958	; 0x958 <sprintf>
 590:	0f 90       	pop	r0
 592:	0f 90       	pop	r0
 594:	0f 90       	pop	r0
 596:	0f 90       	pop	r0
 598:	0f 90       	pop	r0
 59a:	0f 90       	pop	r0
				USART_Transmit_str(temp, _ASCII);
 59c:	6a e0       	ldi	r22, 0x0A	; 10
 59e:	83 e6       	ldi	r24, 0x63	; 99
 5a0:	96 e0       	ldi	r25, 0x06	; 6
 5a2:	0e 94 82 00 	call	0x104	; 0x104 <USART_Transmit_str>
 5a6:	5b c0       	rjmp	.+182    	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
			}
			else
			{
				if(main_btn_mode == 1)
 5a8:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <main_btn_mode>
 5ac:	81 30       	cpi	r24, 0x01	; 1
 5ae:	09 f0       	breq	.+2      	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 5b0:	56 c0       	rjmp	.+172    	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
				{
					// led_btn_mode = 0	------------- LED OFF
					// led_btn_mode = 1	------------- LED ON
					// led_btn_mode = 2	------------- Animation mode
					led_btn_mode++;
 5b2:	80 91 f5 05 	lds	r24, 0x05F5	; 0x8005f5 <led_btn_mode>
 5b6:	8f 5f       	subi	r24, 0xFF	; 255
 5b8:	80 93 f5 05 	sts	0x05F5, r24	; 0x8005f5 <led_btn_mode>
					if(led_btn_mode > 2)	led_btn_mode = 0;
 5bc:	80 91 f5 05 	lds	r24, 0x05F5	; 0x8005f5 <led_btn_mode>
 5c0:	83 30       	cpi	r24, 0x03	; 3
 5c2:	10 f0       	brcs	.+4      	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5c4:	10 92 f5 05 	sts	0x05F5, r1	; 0x8005f5 <led_btn_mode>
					if(led_btn_mode == 0)		sprintf(temp, "--- led_mode  :  OFF ---,  dimming = %d\n", dimming);
 5c8:	80 91 f5 05 	lds	r24, 0x05F5	; 0x8005f5 <led_btn_mode>
 5cc:	81 11       	cpse	r24, r1
 5ce:	15 c0       	rjmp	.+42     	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5d0:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <dimming>
 5d4:	1f 92       	push	r1
 5d6:	8f 93       	push	r24
 5d8:	8b e1       	ldi	r24, 0x1B	; 27
 5da:	95 e0       	ldi	r25, 0x05	; 5
 5dc:	9f 93       	push	r25
 5de:	8f 93       	push	r24
 5e0:	83 e6       	ldi	r24, 0x63	; 99
 5e2:	96 e0       	ldi	r25, 0x06	; 6
 5e4:	9f 93       	push	r25
 5e6:	8f 93       	push	r24
 5e8:	0e 94 ac 04 	call	0x958	; 0x958 <sprintf>
 5ec:	0f 90       	pop	r0
 5ee:	0f 90       	pop	r0
 5f0:	0f 90       	pop	r0
 5f2:	0f 90       	pop	r0
 5f4:	0f 90       	pop	r0
 5f6:	0f 90       	pop	r0
 5f8:	2d c0       	rjmp	.+90     	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
					else if(led_btn_mode == 1)	sprintf(temp, "--- led_mode  :  ON  ---,  dimming = %d\n", dimming);
 5fa:	80 91 f5 05 	lds	r24, 0x05F5	; 0x8005f5 <led_btn_mode>
 5fe:	81 30       	cpi	r24, 0x01	; 1
 600:	a9 f4       	brne	.+42     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 602:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <dimming>
 606:	1f 92       	push	r1
 608:	8f 93       	push	r24
 60a:	89 ec       	ldi	r24, 0xC9	; 201
 60c:	94 e0       	ldi	r25, 0x04	; 4
 60e:	9f 93       	push	r25
 610:	8f 93       	push	r24
 612:	83 e6       	ldi	r24, 0x63	; 99
 614:	96 e0       	ldi	r25, 0x06	; 6
 616:	9f 93       	push	r25
 618:	8f 93       	push	r24
 61a:	0e 94 ac 04 	call	0x958	; 0x958 <sprintf>
 61e:	0f 90       	pop	r0
 620:	0f 90       	pop	r0
 622:	0f 90       	pop	r0
 624:	0f 90       	pop	r0
 626:	0f 90       	pop	r0
 628:	0f 90       	pop	r0
 62a:	14 c0       	rjmp	.+40     	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
					else						sprintf(temp, "--- led_mode  :  ANI ---,  dimming = %d\n", dimming);
 62c:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <dimming>
 630:	1f 92       	push	r1
 632:	8f 93       	push	r24
 634:	82 ef       	ldi	r24, 0xF2	; 242
 636:	94 e0       	ldi	r25, 0x04	; 4
 638:	9f 93       	push	r25
 63a:	8f 93       	push	r24
 63c:	83 e6       	ldi	r24, 0x63	; 99
 63e:	96 e0       	ldi	r25, 0x06	; 6
 640:	9f 93       	push	r25
 642:	8f 93       	push	r24
 644:	0e 94 ac 04 	call	0x958	; 0x958 <sprintf>
 648:	0f 90       	pop	r0
 64a:	0f 90       	pop	r0
 64c:	0f 90       	pop	r0
 64e:	0f 90       	pop	r0
 650:	0f 90       	pop	r0
 652:	0f 90       	pop	r0
					USART_Transmit_str(temp, _ASCII);
 654:	6a e0       	ldi	r22, 0x0A	; 10
 656:	83 e6       	ldi	r24, 0x63	; 99
 658:	96 e0       	ldi	r25, 0x06	; 6
 65a:	0e 94 82 00 	call	0x104	; 0x104 <USART_Transmit_str>
				}
			}
		}
		led_btn_cnt = 0;
 65e:	10 92 f8 05 	sts	0x05F8, r1	; 0x8005f8 <led_btn_cnt>
		dimming_cnt = 0;
 662:	10 92 f2 05 	sts	0x05F2, r1	; 0x8005f2 <dimming_cnt>
	}
	
	// ************************** TIMER_BTN PROCESS ************************** //
	if(!TIMER_BTN)
 666:	4c 99       	sbic	0x09, 4	; 9
 668:	15 c0       	rjmp	.+42     	; 0x694 <__LOCK_REGION_LENGTH__+0x294>
	{
		if(timer_btn_flag == 0)
 66a:	80 91 fa 05 	lds	r24, 0x05FA	; 0x8005fa <timer_btn_flag>
 66e:	81 11       	cpse	r24, r1
 670:	06 c0       	rjmp	.+12     	; 0x67e <__LOCK_REGION_LENGTH__+0x27e>
		{
			timer_btn_flag = 1;
 672:	81 e0       	ldi	r24, 0x01	; 1
 674:	80 93 fa 05 	sts	0x05FA, r24	; 0x8005fa <timer_btn_flag>
			timer_btn_cnt = 0;
 678:	10 92 f7 05 	sts	0x05F7, r1	; 0x8005f7 <timer_btn_cnt>
 67c:	5a c0       	rjmp	.+180    	; 0x732 <__LOCK_REGION_LENGTH__+0x332>
		}
		else
		{
			if(timer_btn_cnt < 60)	timer_btn_cnt++;
 67e:	80 91 f7 05 	lds	r24, 0x05F7	; 0x8005f7 <timer_btn_cnt>
 682:	8c 33       	cpi	r24, 0x3C	; 60
 684:	08 f0       	brcs	.+2      	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 686:	55 c0       	rjmp	.+170    	; 0x732 <__LOCK_REGION_LENGTH__+0x332>
 688:	80 91 f7 05 	lds	r24, 0x05F7	; 0x8005f7 <timer_btn_cnt>
 68c:	8f 5f       	subi	r24, 0xFF	; 255
 68e:	80 93 f7 05 	sts	0x05F7, r24	; 0x8005f7 <timer_btn_cnt>
 692:	4f c0       	rjmp	.+158    	; 0x732 <__LOCK_REGION_LENGTH__+0x332>
		}
	}
	else
	{
		timer_btn_flag = 0;
 694:	10 92 fa 05 	sts	0x05FA, r1	; 0x8005fa <timer_btn_flag>
		if(timer_btn_cnt)
 698:	80 91 f7 05 	lds	r24, 0x05F7	; 0x8005f7 <timer_btn_cnt>
 69c:	88 23       	and	r24, r24
 69e:	09 f4       	brne	.+2      	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 6a0:	46 c0       	rjmp	.+140    	; 0x72e <__LOCK_REGION_LENGTH__+0x32e>
		{
			if(main_btn_mode == 1)
 6a2:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <main_btn_mode>
 6a6:	81 30       	cpi	r24, 0x01	; 1
 6a8:	09 f0       	breq	.+2      	; 0x6ac <__LOCK_REGION_LENGTH__+0x2ac>
 6aa:	41 c0       	rjmp	.+130    	; 0x72e <__LOCK_REGION_LENGTH__+0x32e>
			{
				// timer_btn_mode = 1	------------- Turn off after timer 30min
				// timer_btn_mode = 2	------------- Turn off after timer 60min
				// timer_btn_mode = 0	------------- Turn on and timer off
				time_cnt = 0;	time_sec = 0;	time_min = 0;
 6ac:	10 92 f1 05 	sts	0x05F1, r1	; 0x8005f1 <time_cnt>
 6b0:	10 92 f0 05 	sts	0x05F0, r1	; 0x8005f0 <time_sec>
 6b4:	10 92 ef 05 	sts	0x05EF, r1	; 0x8005ef <time_min>
				timer_btn_mode++;
 6b8:	80 91 f4 05 	lds	r24, 0x05F4	; 0x8005f4 <timer_btn_mode>
 6bc:	8f 5f       	subi	r24, 0xFF	; 255
 6be:	80 93 f4 05 	sts	0x05F4, r24	; 0x8005f4 <timer_btn_mode>
				if(timer_btn_mode > 2)	timer_btn_mode = 0;
 6c2:	80 91 f4 05 	lds	r24, 0x05F4	; 0x8005f4 <timer_btn_mode>
 6c6:	83 30       	cpi	r24, 0x03	; 3
 6c8:	10 f0       	brcs	.+4      	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6ca:	10 92 f4 05 	sts	0x05F4, r1	; 0x8005f4 <timer_btn_mode>
				if(timer_btn_mode == 0)
 6ce:	80 91 f4 05 	lds	r24, 0x05F4	; 0x8005f4 <timer_btn_mode>
 6d2:	81 11       	cpse	r24, r1
 6d4:	0c c0       	rjmp	.+24     	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
				{
					PORTC &= ~(1 << PORTC2);
 6d6:	42 98       	cbi	0x08, 2	; 8
					PORTC &= ~(1 << PORTC3);
 6d8:	43 98       	cbi	0x08, 3	; 8
					sprintf(temp, "--- timer_mode  = Timer off     ---\n");
 6da:	85 e2       	ldi	r24, 0x25	; 37
 6dc:	e4 e4       	ldi	r30, 0x44	; 68
 6de:	f5 e0       	ldi	r31, 0x05	; 5
 6e0:	a3 e6       	ldi	r26, 0x63	; 99
 6e2:	b6 e0       	ldi	r27, 0x06	; 6
 6e4:	01 90       	ld	r0, Z+
 6e6:	0d 92       	st	X+, r0
 6e8:	8a 95       	dec	r24
 6ea:	e1 f7       	brne	.-8      	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
 6ec:	1b c0       	rjmp	.+54     	; 0x724 <__LOCK_REGION_LENGTH__+0x324>
				}
				else if(timer_btn_mode == 1)
 6ee:	80 91 f4 05 	lds	r24, 0x05F4	; 0x8005f4 <timer_btn_mode>
 6f2:	81 30       	cpi	r24, 0x01	; 1
 6f4:	61 f4       	brne	.+24     	; 0x70e <__LOCK_REGION_LENGTH__+0x30e>
				{
					PORTC |= (1 << PORTC2);
 6f6:	42 9a       	sbi	0x08, 2	; 8
					PORTC &= ~(1 << PORTC3);
 6f8:	43 98       	cbi	0x08, 3	; 8
					sprintf(temp, "--- timer_mode  = Timer 30min   ---\n");
 6fa:	85 e2       	ldi	r24, 0x25	; 37
 6fc:	e9 e6       	ldi	r30, 0x69	; 105
 6fe:	f5 e0       	ldi	r31, 0x05	; 5
 700:	a3 e6       	ldi	r26, 0x63	; 99
 702:	b6 e0       	ldi	r27, 0x06	; 6
 704:	01 90       	ld	r0, Z+
 706:	0d 92       	st	X+, r0
 708:	8a 95       	dec	r24
 70a:	e1 f7       	brne	.-8      	; 0x704 <__LOCK_REGION_LENGTH__+0x304>
 70c:	0b c0       	rjmp	.+22     	; 0x724 <__LOCK_REGION_LENGTH__+0x324>
				}
				else
				{
					PORTC &= ~(1 << PORTC2);
 70e:	42 98       	cbi	0x08, 2	; 8
					PORTC |= (1 << PORTC3);
 710:	43 9a       	sbi	0x08, 3	; 8
					sprintf(temp, "--- timer_mode  = Timer 60min   ---\n");
 712:	85 e2       	ldi	r24, 0x25	; 37
 714:	ee e8       	ldi	r30, 0x8E	; 142
 716:	f5 e0       	ldi	r31, 0x05	; 5
 718:	a3 e6       	ldi	r26, 0x63	; 99
 71a:	b6 e0       	ldi	r27, 0x06	; 6
 71c:	01 90       	ld	r0, Z+
 71e:	0d 92       	st	X+, r0
 720:	8a 95       	dec	r24
 722:	e1 f7       	brne	.-8      	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
				}
				USART_Transmit_str(temp, _ASCII);
 724:	6a e0       	ldi	r22, 0x0A	; 10
 726:	83 e6       	ldi	r24, 0x63	; 99
 728:	96 e0       	ldi	r25, 0x06	; 6
 72a:	0e 94 82 00 	call	0x104	; 0x104 <USART_Transmit_str>
			}
		}
		timer_btn_cnt = 0;
 72e:	10 92 f7 05 	sts	0x05F7, r1	; 0x8005f7 <timer_btn_cnt>
	}
}
 732:	ff 91       	pop	r31
 734:	ef 91       	pop	r30
 736:	bf 91       	pop	r27
 738:	af 91       	pop	r26
 73a:	9f 91       	pop	r25
 73c:	8f 91       	pop	r24
 73e:	7f 91       	pop	r23
 740:	6f 91       	pop	r22
 742:	5f 91       	pop	r21
 744:	4f 91       	pop	r20
 746:	3f 91       	pop	r19
 748:	2f 91       	pop	r18
 74a:	0f 90       	pop	r0
 74c:	0f be       	out	0x3f, r0	; 63
 74e:	0f 90       	pop	r0
 750:	1f 90       	pop	r1
 752:	18 95       	reti

00000754 <led_control>:


void led_control(char num)
{
 754:	ef 92       	push	r14
 756:	ff 92       	push	r15
 758:	0f 93       	push	r16
 75a:	1f 93       	push	r17
 75c:	cf 93       	push	r28
 75e:	df 93       	push	r29
	int i, j;
	if(num == 2)
 760:	82 30       	cpi	r24, 0x02	; 2
 762:	a1 f5       	brne	.+104    	; 0x7cc <led_control+0x78>
 764:	0f 2e       	mov	r0, r31
 766:	f0 e0       	ldi	r31, 0x00	; 0
 768:	ef 2e       	mov	r14, r31
 76a:	f1 e0       	ldi	r31, 0x01	; 1
 76c:	ff 2e       	mov	r15, r31
 76e:	f0 2d       	mov	r31, r0
 770:	0c ed       	ldi	r16, 0xDC	; 220
 772:	11 e0       	ldi	r17, 0x01	; 1
 774:	c5 ed       	ldi	r28, 0xD5	; 213
 776:	d7 e0       	ldi	r29, 0x07	; 7
 778:	25 c0       	rjmp	.+74     	; 0x7c4 <led_control+0x70>
	{
		for(j=0;j<LED_NUM;j++)
		{
			for(i=0;i<LED_NUM;i++)
			{
 				led[i].r = led_tbl[i+j][0];
 77a:	8c 91       	ld	r24, X
 77c:	81 83       	std	Z+1, r24	; 0x01
 				led[i].g = led_tbl[i+j][1];
 77e:	11 96       	adiw	r26, 0x01	; 1
 780:	8c 91       	ld	r24, X
 782:	11 97       	sbiw	r26, 0x01	; 1
 784:	80 83       	st	Z, r24
 				led[i].b = 0;
 786:	12 82       	std	Z+2, r1	; 0x02
 788:	12 96       	adiw	r26, 0x02	; 2
 78a:	33 96       	adiw	r30, 0x03	; 3
	int i, j;
	if(num == 2)
	{
		for(j=0;j<LED_NUM;j++)
		{
			for(i=0;i<LED_NUM;i++)
 78c:	ec 17       	cp	r30, r28
 78e:	fd 07       	cpc	r31, r29
 790:	a1 f7       	brne	.-24     	; 0x77a <led_control+0x26>
// 				unsigned char a = rand()%100;
// 				led[i].r = 255 / a;
// 				led[i].g = 150 / a;
// 				led[i].b = 0;
			}
			ws2812_setleds(led, LED_NUM);
 792:	6e e6       	ldi	r22, 0x6E	; 110
 794:	70 e0       	ldi	r23, 0x00	; 0
 796:	8b e8       	ldi	r24, 0x8B	; 139
 798:	96 e0       	ldi	r25, 0x06	; 6
 79a:	0e 94 e7 00 	call	0x1ce	; 0x1ce <ws2812_setleds>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 79e:	2f ef       	ldi	r18, 0xFF	; 255
 7a0:	86 e7       	ldi	r24, 0x76	; 118
 7a2:	91 e0       	ldi	r25, 0x01	; 1
 7a4:	21 50       	subi	r18, 0x01	; 1
 7a6:	80 40       	sbci	r24, 0x00	; 0
 7a8:	90 40       	sbci	r25, 0x00	; 0
 7aa:	e1 f7       	brne	.-8      	; 0x7a4 <led_control+0x50>
 7ac:	00 c0       	rjmp	.+0      	; 0x7ae <led_control+0x5a>
 7ae:	00 00       	nop
			_delay_ms(30);
			if(led_btn_mode != 2)	break;
 7b0:	80 91 f5 05 	lds	r24, 0x05F5	; 0x8005f5 <led_btn_mode>
 7b4:	82 30       	cpi	r24, 0x02	; 2
 7b6:	51 f4       	brne	.+20     	; 0x7cc <led_control+0x78>
 7b8:	22 e0       	ldi	r18, 0x02	; 2
 7ba:	e2 0e       	add	r14, r18
 7bc:	f1 1c       	adc	r15, r1
void led_control(char num)
{
	int i, j;
	if(num == 2)
	{
		for(j=0;j<LED_NUM;j++)
 7be:	0e 15       	cp	r16, r14
 7c0:	1f 05       	cpc	r17, r15
 7c2:	21 f0       	breq	.+8      	; 0x7cc <led_control+0x78>
 7c4:	eb e8       	ldi	r30, 0x8B	; 139
 7c6:	f6 e0       	ldi	r31, 0x06	; 6
	}
}


void led_control(char num)
{
 7c8:	d7 01       	movw	r26, r14
 7ca:	d7 cf       	rjmp	.-82     	; 0x77a <led_control+0x26>
			ws2812_setleds(led, LED_NUM);
			_delay_ms(30);
			if(led_btn_mode != 2)	break;
		}
	}
}
 7cc:	df 91       	pop	r29
 7ce:	cf 91       	pop	r28
 7d0:	1f 91       	pop	r17
 7d2:	0f 91       	pop	r16
 7d4:	ff 90       	pop	r15
 7d6:	ef 90       	pop	r14
 7d8:	08 95       	ret

000007da <led_display>:


void led_display(void)
{
 7da:	0f 93       	push	r16
 7dc:	1f 93       	push	r17
 7de:	cf 93       	push	r28
 7e0:	df 93       	push	r29
 7e2:	eb e8       	ldi	r30, 0x8B	; 139
 7e4:	f6 e0       	ldi	r31, 0x06	; 6
 7e6:	05 ed       	ldi	r16, 0xD5	; 213
 7e8:	17 e0       	ldi	r17, 0x07	; 7
	for(int i=0;i<LED_NUM;i++)
	{
		led[i].r = 255 / dimming;
 7ea:	cf ef       	ldi	r28, 0xFF	; 255
 7ec:	d0 e0       	ldi	r29, 0x00	; 0
		led[i].g = 150 / dimming;
 7ee:	26 e9       	ldi	r18, 0x96	; 150
 7f0:	30 e0       	ldi	r19, 0x00	; 0

void led_display(void)
{
	for(int i=0;i<LED_NUM;i++)
	{
		led[i].r = 255 / dimming;
 7f2:	60 91 70 04 	lds	r22, 0x0470	; 0x800470 <dimming>
 7f6:	70 e0       	ldi	r23, 0x00	; 0
 7f8:	ce 01       	movw	r24, r28
 7fa:	0e 94 84 04 	call	0x908	; 0x908 <__divmodhi4>
 7fe:	61 83       	std	Z+1, r22	; 0x01
		led[i].g = 150 / dimming;
 800:	60 91 70 04 	lds	r22, 0x0470	; 0x800470 <dimming>
 804:	70 e0       	ldi	r23, 0x00	; 0
 806:	c9 01       	movw	r24, r18
 808:	0e 94 84 04 	call	0x908	; 0x908 <__divmodhi4>
 80c:	60 83       	st	Z, r22
		led[i].b = 0;		
 80e:	12 82       	std	Z+2, r1	; 0x02
 810:	33 96       	adiw	r30, 0x03	; 3
}


void led_display(void)
{
	for(int i=0;i<LED_NUM;i++)
 812:	e0 17       	cp	r30, r16
 814:	f1 07       	cpc	r31, r17
 816:	69 f7       	brne	.-38     	; 0x7f2 <led_display+0x18>
	{
		led[i].r = 255 / dimming;
		led[i].g = 150 / dimming;
		led[i].b = 0;		
	}
	ws2812_setleds(led, LED_NUM);
 818:	6e e6       	ldi	r22, 0x6E	; 110
 81a:	70 e0       	ldi	r23, 0x00	; 0
 81c:	8b e8       	ldi	r24, 0x8B	; 139
 81e:	96 e0       	ldi	r25, 0x06	; 6
 820:	0e 94 e7 00 	call	0x1ce	; 0x1ce <ws2812_setleds>
}
 824:	df 91       	pop	r29
 826:	cf 91       	pop	r28
 828:	1f 91       	pop	r17
 82a:	0f 91       	pop	r16
 82c:	08 95       	ret

0000082e <led_off>:

void led_off(void)
{
 82e:	eb e8       	ldi	r30, 0x8B	; 139
 830:	f6 e0       	ldi	r31, 0x06	; 6
 832:	85 ed       	ldi	r24, 0xD5	; 213
 834:	97 e0       	ldi	r25, 0x07	; 7
	for(int i=0;i<LED_NUM;i++)
	{
		led[i].r = 0;
 836:	11 82       	std	Z+1, r1	; 0x01
		led[i].g = 0;
 838:	10 82       	st	Z, r1
		led[i].b = 0;
 83a:	12 82       	std	Z+2, r1	; 0x02
 83c:	33 96       	adiw	r30, 0x03	; 3
	ws2812_setleds(led, LED_NUM);
}

void led_off(void)
{
	for(int i=0;i<LED_NUM;i++)
 83e:	e8 17       	cp	r30, r24
 840:	f9 07       	cpc	r31, r25
 842:	c9 f7       	brne	.-14     	; 0x836 <led_off+0x8>
	{
		led[i].r = 0;
		led[i].g = 0;
		led[i].b = 0;
	}
	ws2812_setleds(led, LED_NUM);
 844:	6e e6       	ldi	r22, 0x6E	; 110
 846:	70 e0       	ldi	r23, 0x00	; 0
 848:	8b e8       	ldi	r24, 0x8B	; 139
 84a:	96 e0       	ldi	r25, 0x06	; 6
 84c:	0e 94 e7 00 	call	0x1ce	; 0x1ce <ws2812_setleds>
 850:	08 95       	ret

00000852 <main>:
}


int main(void)
{
    DDRB = (1 << PORTB0) | (1 << PORTB5);		// PORTB0 = WS2812B, PORTB5 = status debug
 852:	81 e2       	ldi	r24, 0x21	; 33
 854:	84 b9       	out	0x04, r24	; 4
	DDRC = (1 << PORTC2) | (1 << PORTC3) | (1 << PORTC4);
 856:	8c e1       	ldi	r24, 0x1C	; 28
 858:	87 b9       	out	0x07, r24	; 7
	TCCR0A = (1 << WGM01);			// CTC Mode
 85a:	82 e0       	ldi	r24, 0x02	; 2
 85c:	84 bd       	out	0x24, r24	; 36
	TCCR0B = (1 << CS00) | (1 << CS02);		// 1024 Prescale
 85e:	95 e0       	ldi	r25, 0x05	; 5
 860:	95 bd       	out	0x25, r25	; 37
	TIMSK0 = (1 << OCIE0A);			// Compare A Match Interrupt Enable
 862:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	OCR0A = 0x9C;					// 10ms TIMER SET
 866:	9c e9       	ldi	r25, 0x9C	; 156
 868:	97 bd       	out	0x27, r25	; 39
	
	TCCR1A = 0x00;                  // CTC Mode
 86a:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B = 0x0B;                  // 64 prescale        16000000 / 64 65535
 86e:	9b e0       	ldi	r25, 0x0B	; 11
 870:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	TIMSK1 = 0x02;                  // Compare A Match Interrupt Enable
 874:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	OCR1A = 0x30D4;                 // 50ms TIMER SET
 878:	84 ed       	ldi	r24, 0xD4	; 212
 87a:	90 e3       	ldi	r25, 0x30	; 48
 87c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 880:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	USART_Init(BAUD_9600);
 884:	87 e6       	ldi	r24, 0x67	; 103
 886:	90 e0       	ldi	r25, 0x00	; 0
 888:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Init>
	led_off();
 88c:	0e 94 17 04 	call	0x82e	; 0x82e <led_off>
 890:	2f ef       	ldi	r18, 0xFF	; 255
 892:	89 e6       	ldi	r24, 0x69	; 105
 894:	98 e1       	ldi	r25, 0x18	; 24
 896:	21 50       	subi	r18, 0x01	; 1
 898:	80 40       	sbci	r24, 0x00	; 0
 89a:	90 40       	sbci	r25, 0x00	; 0
 89c:	e1 f7       	brne	.-8      	; 0x896 <main+0x44>
 89e:	00 c0       	rjmp	.+0      	; 0x8a0 <main+0x4e>
 8a0:	00 00       	nop
	
	_delay_ms(500);
	
	sprintf(temp, "--- Now Start ---\n");
 8a2:	83 e1       	ldi	r24, 0x13	; 19
 8a4:	eb ed       	ldi	r30, 0xDB	; 219
 8a6:	f5 e0       	ldi	r31, 0x05	; 5
 8a8:	a3 e6       	ldi	r26, 0x63	; 99
 8aa:	b6 e0       	ldi	r27, 0x06	; 6
 8ac:	01 90       	ld	r0, Z+
 8ae:	0d 92       	st	X+, r0
 8b0:	8a 95       	dec	r24
 8b2:	e1 f7       	brne	.-8      	; 0x8ac <main+0x5a>
	USART_Transmit_str(temp, _ASCII);
 8b4:	6a e0       	ldi	r22, 0x0A	; 10
 8b6:	83 e6       	ldi	r24, 0x63	; 99
 8b8:	96 e0       	ldi	r25, 0x06	; 6
 8ba:	0e 94 82 00 	call	0x104	; 0x104 <USART_Transmit_str>
	sei();
 8be:	78 94       	sei
    while (1)
    {
  		if(main_btn_mode == 1 && led_btn_mode == 1)
 8c0:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <main_btn_mode>
 8c4:	81 30       	cpi	r24, 0x01	; 1
 8c6:	39 f4       	brne	.+14     	; 0x8d6 <main+0x84>
 8c8:	80 91 f5 05 	lds	r24, 0x05F5	; 0x8005f5 <led_btn_mode>
 8cc:	81 30       	cpi	r24, 0x01	; 1
 8ce:	19 f4       	brne	.+6      	; 0x8d6 <main+0x84>
  		{
 			led_display();
 8d0:	0e 94 ed 03 	call	0x7da	; 0x7da <led_display>
 8d4:	f5 cf       	rjmp	.-22     	; 0x8c0 <main+0x6e>
		}
		else if(main_btn_mode == 1 && led_btn_mode == 2)
 8d6:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <main_btn_mode>
 8da:	81 30       	cpi	r24, 0x01	; 1
 8dc:	39 f4       	brne	.+14     	; 0x8ec <main+0x9a>
 8de:	80 91 f5 05 	lds	r24, 0x05F5	; 0x8005f5 <led_btn_mode>
 8e2:	82 30       	cpi	r24, 0x02	; 2
 8e4:	19 f4       	brne	.+6      	; 0x8ec <main+0x9a>
		{
	 		led_control(2);
 8e6:	0e 94 aa 03 	call	0x754	; 0x754 <led_control>
 8ea:	ea cf       	rjmp	.-44     	; 0x8c0 <main+0x6e>
		}
		else if(main_btn_mode == 0 || led_btn_mode == 0)
 8ec:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <main_btn_mode>
 8f0:	88 23       	and	r24, r24
 8f2:	21 f0       	breq	.+8      	; 0x8fc <main+0xaa>
 8f4:	80 91 f5 05 	lds	r24, 0x05F5	; 0x8005f5 <led_btn_mode>
 8f8:	81 11       	cpse	r24, r1
 8fa:	e2 cf       	rjmp	.-60     	; 0x8c0 <main+0x6e>
		{
			PORTB &= ~(1 << PORTB5);
 8fc:	2d 98       	cbi	0x05, 5	; 5
			PORTC &= ~(1 << PORTC2);
 8fe:	42 98       	cbi	0x08, 2	; 8
			PORTC &= ~(1 << PORTC3);
 900:	43 98       	cbi	0x08, 3	; 8
			led_off();
 902:	0e 94 17 04 	call	0x82e	; 0x82e <led_off>
 906:	dc cf       	rjmp	.-72     	; 0x8c0 <main+0x6e>

00000908 <__divmodhi4>:
 908:	97 fb       	bst	r25, 7
 90a:	07 2e       	mov	r0, r23
 90c:	16 f4       	brtc	.+4      	; 0x912 <__divmodhi4+0xa>
 90e:	00 94       	com	r0
 910:	07 d0       	rcall	.+14     	; 0x920 <__divmodhi4_neg1>
 912:	77 fd       	sbrc	r23, 7
 914:	09 d0       	rcall	.+18     	; 0x928 <__divmodhi4_neg2>
 916:	0e 94 98 04 	call	0x930	; 0x930 <__udivmodhi4>
 91a:	07 fc       	sbrc	r0, 7
 91c:	05 d0       	rcall	.+10     	; 0x928 <__divmodhi4_neg2>
 91e:	3e f4       	brtc	.+14     	; 0x92e <__divmodhi4_exit>

00000920 <__divmodhi4_neg1>:
 920:	90 95       	com	r25
 922:	81 95       	neg	r24
 924:	9f 4f       	sbci	r25, 0xFF	; 255
 926:	08 95       	ret

00000928 <__divmodhi4_neg2>:
 928:	70 95       	com	r23
 92a:	61 95       	neg	r22
 92c:	7f 4f       	sbci	r23, 0xFF	; 255

0000092e <__divmodhi4_exit>:
 92e:	08 95       	ret

00000930 <__udivmodhi4>:
 930:	aa 1b       	sub	r26, r26
 932:	bb 1b       	sub	r27, r27
 934:	51 e1       	ldi	r21, 0x11	; 17
 936:	07 c0       	rjmp	.+14     	; 0x946 <__udivmodhi4_ep>

00000938 <__udivmodhi4_loop>:
 938:	aa 1f       	adc	r26, r26
 93a:	bb 1f       	adc	r27, r27
 93c:	a6 17       	cp	r26, r22
 93e:	b7 07       	cpc	r27, r23
 940:	10 f0       	brcs	.+4      	; 0x946 <__udivmodhi4_ep>
 942:	a6 1b       	sub	r26, r22
 944:	b7 0b       	sbc	r27, r23

00000946 <__udivmodhi4_ep>:
 946:	88 1f       	adc	r24, r24
 948:	99 1f       	adc	r25, r25
 94a:	5a 95       	dec	r21
 94c:	a9 f7       	brne	.-22     	; 0x938 <__udivmodhi4_loop>
 94e:	80 95       	com	r24
 950:	90 95       	com	r25
 952:	bc 01       	movw	r22, r24
 954:	cd 01       	movw	r24, r26
 956:	08 95       	ret

00000958 <sprintf>:
 958:	ae e0       	ldi	r26, 0x0E	; 14
 95a:	b0 e0       	ldi	r27, 0x00	; 0
 95c:	e2 eb       	ldi	r30, 0xB2	; 178
 95e:	f4 e0       	ldi	r31, 0x04	; 4
 960:	0c 94 6d 07 	jmp	0xeda	; 0xeda <__prologue_saves__+0x1c>
 964:	0d 89       	ldd	r16, Y+21	; 0x15
 966:	1e 89       	ldd	r17, Y+22	; 0x16
 968:	86 e0       	ldi	r24, 0x06	; 6
 96a:	8c 83       	std	Y+4, r24	; 0x04
 96c:	1a 83       	std	Y+2, r17	; 0x02
 96e:	09 83       	std	Y+1, r16	; 0x01
 970:	8f ef       	ldi	r24, 0xFF	; 255
 972:	9f e7       	ldi	r25, 0x7F	; 127
 974:	9e 83       	std	Y+6, r25	; 0x06
 976:	8d 83       	std	Y+5, r24	; 0x05
 978:	ae 01       	movw	r20, r28
 97a:	47 5e       	subi	r20, 0xE7	; 231
 97c:	5f 4f       	sbci	r21, 0xFF	; 255
 97e:	6f 89       	ldd	r22, Y+23	; 0x17
 980:	78 8d       	ldd	r23, Y+24	; 0x18
 982:	ce 01       	movw	r24, r28
 984:	01 96       	adiw	r24, 0x01	; 1
 986:	0e 94 ce 04 	call	0x99c	; 0x99c <vfprintf>
 98a:	ef 81       	ldd	r30, Y+7	; 0x07
 98c:	f8 85       	ldd	r31, Y+8	; 0x08
 98e:	e0 0f       	add	r30, r16
 990:	f1 1f       	adc	r31, r17
 992:	10 82       	st	Z, r1
 994:	2e 96       	adiw	r28, 0x0e	; 14
 996:	e4 e0       	ldi	r30, 0x04	; 4
 998:	0c 94 89 07 	jmp	0xf12	; 0xf12 <__epilogue_restores__+0x1c>

0000099c <vfprintf>:
 99c:	ab e0       	ldi	r26, 0x0B	; 11
 99e:	b0 e0       	ldi	r27, 0x00	; 0
 9a0:	e4 ed       	ldi	r30, 0xD4	; 212
 9a2:	f4 e0       	ldi	r31, 0x04	; 4
 9a4:	0c 94 5f 07 	jmp	0xebe	; 0xebe <__prologue_saves__>
 9a8:	6c 01       	movw	r12, r24
 9aa:	7b 01       	movw	r14, r22
 9ac:	8a 01       	movw	r16, r20
 9ae:	fc 01       	movw	r30, r24
 9b0:	17 82       	std	Z+7, r1	; 0x07
 9b2:	16 82       	std	Z+6, r1	; 0x06
 9b4:	83 81       	ldd	r24, Z+3	; 0x03
 9b6:	81 ff       	sbrs	r24, 1
 9b8:	cc c1       	rjmp	.+920    	; 0xd52 <vfprintf+0x3b6>
 9ba:	ce 01       	movw	r24, r28
 9bc:	01 96       	adiw	r24, 0x01	; 1
 9be:	3c 01       	movw	r6, r24
 9c0:	f6 01       	movw	r30, r12
 9c2:	93 81       	ldd	r25, Z+3	; 0x03
 9c4:	f7 01       	movw	r30, r14
 9c6:	93 fd       	sbrc	r25, 3
 9c8:	85 91       	lpm	r24, Z+
 9ca:	93 ff       	sbrs	r25, 3
 9cc:	81 91       	ld	r24, Z+
 9ce:	7f 01       	movw	r14, r30
 9d0:	88 23       	and	r24, r24
 9d2:	09 f4       	brne	.+2      	; 0x9d6 <vfprintf+0x3a>
 9d4:	ba c1       	rjmp	.+884    	; 0xd4a <vfprintf+0x3ae>
 9d6:	85 32       	cpi	r24, 0x25	; 37
 9d8:	39 f4       	brne	.+14     	; 0x9e8 <vfprintf+0x4c>
 9da:	93 fd       	sbrc	r25, 3
 9dc:	85 91       	lpm	r24, Z+
 9de:	93 ff       	sbrs	r25, 3
 9e0:	81 91       	ld	r24, Z+
 9e2:	7f 01       	movw	r14, r30
 9e4:	85 32       	cpi	r24, 0x25	; 37
 9e6:	29 f4       	brne	.+10     	; 0x9f2 <vfprintf+0x56>
 9e8:	b6 01       	movw	r22, r12
 9ea:	90 e0       	ldi	r25, 0x00	; 0
 9ec:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 9f0:	e7 cf       	rjmp	.-50     	; 0x9c0 <vfprintf+0x24>
 9f2:	91 2c       	mov	r9, r1
 9f4:	21 2c       	mov	r2, r1
 9f6:	31 2c       	mov	r3, r1
 9f8:	ff e1       	ldi	r31, 0x1F	; 31
 9fa:	f3 15       	cp	r31, r3
 9fc:	d8 f0       	brcs	.+54     	; 0xa34 <vfprintf+0x98>
 9fe:	8b 32       	cpi	r24, 0x2B	; 43
 a00:	79 f0       	breq	.+30     	; 0xa20 <vfprintf+0x84>
 a02:	38 f4       	brcc	.+14     	; 0xa12 <vfprintf+0x76>
 a04:	80 32       	cpi	r24, 0x20	; 32
 a06:	79 f0       	breq	.+30     	; 0xa26 <vfprintf+0x8a>
 a08:	83 32       	cpi	r24, 0x23	; 35
 a0a:	a1 f4       	brne	.+40     	; 0xa34 <vfprintf+0x98>
 a0c:	23 2d       	mov	r18, r3
 a0e:	20 61       	ori	r18, 0x10	; 16
 a10:	1d c0       	rjmp	.+58     	; 0xa4c <vfprintf+0xb0>
 a12:	8d 32       	cpi	r24, 0x2D	; 45
 a14:	61 f0       	breq	.+24     	; 0xa2e <vfprintf+0x92>
 a16:	80 33       	cpi	r24, 0x30	; 48
 a18:	69 f4       	brne	.+26     	; 0xa34 <vfprintf+0x98>
 a1a:	23 2d       	mov	r18, r3
 a1c:	21 60       	ori	r18, 0x01	; 1
 a1e:	16 c0       	rjmp	.+44     	; 0xa4c <vfprintf+0xb0>
 a20:	83 2d       	mov	r24, r3
 a22:	82 60       	ori	r24, 0x02	; 2
 a24:	38 2e       	mov	r3, r24
 a26:	e3 2d       	mov	r30, r3
 a28:	e4 60       	ori	r30, 0x04	; 4
 a2a:	3e 2e       	mov	r3, r30
 a2c:	2a c0       	rjmp	.+84     	; 0xa82 <vfprintf+0xe6>
 a2e:	f3 2d       	mov	r31, r3
 a30:	f8 60       	ori	r31, 0x08	; 8
 a32:	1d c0       	rjmp	.+58     	; 0xa6e <vfprintf+0xd2>
 a34:	37 fc       	sbrc	r3, 7
 a36:	2d c0       	rjmp	.+90     	; 0xa92 <vfprintf+0xf6>
 a38:	20 ed       	ldi	r18, 0xD0	; 208
 a3a:	28 0f       	add	r18, r24
 a3c:	2a 30       	cpi	r18, 0x0A	; 10
 a3e:	40 f0       	brcs	.+16     	; 0xa50 <vfprintf+0xb4>
 a40:	8e 32       	cpi	r24, 0x2E	; 46
 a42:	b9 f4       	brne	.+46     	; 0xa72 <vfprintf+0xd6>
 a44:	36 fc       	sbrc	r3, 6
 a46:	81 c1       	rjmp	.+770    	; 0xd4a <vfprintf+0x3ae>
 a48:	23 2d       	mov	r18, r3
 a4a:	20 64       	ori	r18, 0x40	; 64
 a4c:	32 2e       	mov	r3, r18
 a4e:	19 c0       	rjmp	.+50     	; 0xa82 <vfprintf+0xe6>
 a50:	36 fe       	sbrs	r3, 6
 a52:	06 c0       	rjmp	.+12     	; 0xa60 <vfprintf+0xc4>
 a54:	8a e0       	ldi	r24, 0x0A	; 10
 a56:	98 9e       	mul	r9, r24
 a58:	20 0d       	add	r18, r0
 a5a:	11 24       	eor	r1, r1
 a5c:	92 2e       	mov	r9, r18
 a5e:	11 c0       	rjmp	.+34     	; 0xa82 <vfprintf+0xe6>
 a60:	ea e0       	ldi	r30, 0x0A	; 10
 a62:	2e 9e       	mul	r2, r30
 a64:	20 0d       	add	r18, r0
 a66:	11 24       	eor	r1, r1
 a68:	22 2e       	mov	r2, r18
 a6a:	f3 2d       	mov	r31, r3
 a6c:	f0 62       	ori	r31, 0x20	; 32
 a6e:	3f 2e       	mov	r3, r31
 a70:	08 c0       	rjmp	.+16     	; 0xa82 <vfprintf+0xe6>
 a72:	8c 36       	cpi	r24, 0x6C	; 108
 a74:	21 f4       	brne	.+8      	; 0xa7e <vfprintf+0xe2>
 a76:	83 2d       	mov	r24, r3
 a78:	80 68       	ori	r24, 0x80	; 128
 a7a:	38 2e       	mov	r3, r24
 a7c:	02 c0       	rjmp	.+4      	; 0xa82 <vfprintf+0xe6>
 a7e:	88 36       	cpi	r24, 0x68	; 104
 a80:	41 f4       	brne	.+16     	; 0xa92 <vfprintf+0xf6>
 a82:	f7 01       	movw	r30, r14
 a84:	93 fd       	sbrc	r25, 3
 a86:	85 91       	lpm	r24, Z+
 a88:	93 ff       	sbrs	r25, 3
 a8a:	81 91       	ld	r24, Z+
 a8c:	7f 01       	movw	r14, r30
 a8e:	81 11       	cpse	r24, r1
 a90:	b3 cf       	rjmp	.-154    	; 0x9f8 <vfprintf+0x5c>
 a92:	98 2f       	mov	r25, r24
 a94:	9f 7d       	andi	r25, 0xDF	; 223
 a96:	95 54       	subi	r25, 0x45	; 69
 a98:	93 30       	cpi	r25, 0x03	; 3
 a9a:	28 f4       	brcc	.+10     	; 0xaa6 <vfprintf+0x10a>
 a9c:	0c 5f       	subi	r16, 0xFC	; 252
 a9e:	1f 4f       	sbci	r17, 0xFF	; 255
 aa0:	9f e3       	ldi	r25, 0x3F	; 63
 aa2:	99 83       	std	Y+1, r25	; 0x01
 aa4:	0d c0       	rjmp	.+26     	; 0xac0 <vfprintf+0x124>
 aa6:	83 36       	cpi	r24, 0x63	; 99
 aa8:	31 f0       	breq	.+12     	; 0xab6 <vfprintf+0x11a>
 aaa:	83 37       	cpi	r24, 0x73	; 115
 aac:	71 f0       	breq	.+28     	; 0xaca <vfprintf+0x12e>
 aae:	83 35       	cpi	r24, 0x53	; 83
 ab0:	09 f0       	breq	.+2      	; 0xab4 <vfprintf+0x118>
 ab2:	59 c0       	rjmp	.+178    	; 0xb66 <vfprintf+0x1ca>
 ab4:	21 c0       	rjmp	.+66     	; 0xaf8 <vfprintf+0x15c>
 ab6:	f8 01       	movw	r30, r16
 ab8:	80 81       	ld	r24, Z
 aba:	89 83       	std	Y+1, r24	; 0x01
 abc:	0e 5f       	subi	r16, 0xFE	; 254
 abe:	1f 4f       	sbci	r17, 0xFF	; 255
 ac0:	88 24       	eor	r8, r8
 ac2:	83 94       	inc	r8
 ac4:	91 2c       	mov	r9, r1
 ac6:	53 01       	movw	r10, r6
 ac8:	13 c0       	rjmp	.+38     	; 0xaf0 <vfprintf+0x154>
 aca:	28 01       	movw	r4, r16
 acc:	f2 e0       	ldi	r31, 0x02	; 2
 ace:	4f 0e       	add	r4, r31
 ad0:	51 1c       	adc	r5, r1
 ad2:	f8 01       	movw	r30, r16
 ad4:	a0 80       	ld	r10, Z
 ad6:	b1 80       	ldd	r11, Z+1	; 0x01
 ad8:	36 fe       	sbrs	r3, 6
 ada:	03 c0       	rjmp	.+6      	; 0xae2 <vfprintf+0x146>
 adc:	69 2d       	mov	r22, r9
 ade:	70 e0       	ldi	r23, 0x00	; 0
 ae0:	02 c0       	rjmp	.+4      	; 0xae6 <vfprintf+0x14a>
 ae2:	6f ef       	ldi	r22, 0xFF	; 255
 ae4:	7f ef       	ldi	r23, 0xFF	; 255
 ae6:	c5 01       	movw	r24, r10
 ae8:	0e 94 ba 06 	call	0xd74	; 0xd74 <strnlen>
 aec:	4c 01       	movw	r8, r24
 aee:	82 01       	movw	r16, r4
 af0:	f3 2d       	mov	r31, r3
 af2:	ff 77       	andi	r31, 0x7F	; 127
 af4:	3f 2e       	mov	r3, r31
 af6:	16 c0       	rjmp	.+44     	; 0xb24 <vfprintf+0x188>
 af8:	28 01       	movw	r4, r16
 afa:	22 e0       	ldi	r18, 0x02	; 2
 afc:	42 0e       	add	r4, r18
 afe:	51 1c       	adc	r5, r1
 b00:	f8 01       	movw	r30, r16
 b02:	a0 80       	ld	r10, Z
 b04:	b1 80       	ldd	r11, Z+1	; 0x01
 b06:	36 fe       	sbrs	r3, 6
 b08:	03 c0       	rjmp	.+6      	; 0xb10 <vfprintf+0x174>
 b0a:	69 2d       	mov	r22, r9
 b0c:	70 e0       	ldi	r23, 0x00	; 0
 b0e:	02 c0       	rjmp	.+4      	; 0xb14 <vfprintf+0x178>
 b10:	6f ef       	ldi	r22, 0xFF	; 255
 b12:	7f ef       	ldi	r23, 0xFF	; 255
 b14:	c5 01       	movw	r24, r10
 b16:	0e 94 af 06 	call	0xd5e	; 0xd5e <strnlen_P>
 b1a:	4c 01       	movw	r8, r24
 b1c:	f3 2d       	mov	r31, r3
 b1e:	f0 68       	ori	r31, 0x80	; 128
 b20:	3f 2e       	mov	r3, r31
 b22:	82 01       	movw	r16, r4
 b24:	33 fc       	sbrc	r3, 3
 b26:	1b c0       	rjmp	.+54     	; 0xb5e <vfprintf+0x1c2>
 b28:	82 2d       	mov	r24, r2
 b2a:	90 e0       	ldi	r25, 0x00	; 0
 b2c:	88 16       	cp	r8, r24
 b2e:	99 06       	cpc	r9, r25
 b30:	b0 f4       	brcc	.+44     	; 0xb5e <vfprintf+0x1c2>
 b32:	b6 01       	movw	r22, r12
 b34:	80 e2       	ldi	r24, 0x20	; 32
 b36:	90 e0       	ldi	r25, 0x00	; 0
 b38:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 b3c:	2a 94       	dec	r2
 b3e:	f4 cf       	rjmp	.-24     	; 0xb28 <vfprintf+0x18c>
 b40:	f5 01       	movw	r30, r10
 b42:	37 fc       	sbrc	r3, 7
 b44:	85 91       	lpm	r24, Z+
 b46:	37 fe       	sbrs	r3, 7
 b48:	81 91       	ld	r24, Z+
 b4a:	5f 01       	movw	r10, r30
 b4c:	b6 01       	movw	r22, r12
 b4e:	90 e0       	ldi	r25, 0x00	; 0
 b50:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 b54:	21 10       	cpse	r2, r1
 b56:	2a 94       	dec	r2
 b58:	21 e0       	ldi	r18, 0x01	; 1
 b5a:	82 1a       	sub	r8, r18
 b5c:	91 08       	sbc	r9, r1
 b5e:	81 14       	cp	r8, r1
 b60:	91 04       	cpc	r9, r1
 b62:	71 f7       	brne	.-36     	; 0xb40 <vfprintf+0x1a4>
 b64:	e8 c0       	rjmp	.+464    	; 0xd36 <vfprintf+0x39a>
 b66:	84 36       	cpi	r24, 0x64	; 100
 b68:	11 f0       	breq	.+4      	; 0xb6e <vfprintf+0x1d2>
 b6a:	89 36       	cpi	r24, 0x69	; 105
 b6c:	41 f5       	brne	.+80     	; 0xbbe <vfprintf+0x222>
 b6e:	f8 01       	movw	r30, r16
 b70:	37 fe       	sbrs	r3, 7
 b72:	07 c0       	rjmp	.+14     	; 0xb82 <vfprintf+0x1e6>
 b74:	60 81       	ld	r22, Z
 b76:	71 81       	ldd	r23, Z+1	; 0x01
 b78:	82 81       	ldd	r24, Z+2	; 0x02
 b7a:	93 81       	ldd	r25, Z+3	; 0x03
 b7c:	0c 5f       	subi	r16, 0xFC	; 252
 b7e:	1f 4f       	sbci	r17, 0xFF	; 255
 b80:	08 c0       	rjmp	.+16     	; 0xb92 <vfprintf+0x1f6>
 b82:	60 81       	ld	r22, Z
 b84:	71 81       	ldd	r23, Z+1	; 0x01
 b86:	07 2e       	mov	r0, r23
 b88:	00 0c       	add	r0, r0
 b8a:	88 0b       	sbc	r24, r24
 b8c:	99 0b       	sbc	r25, r25
 b8e:	0e 5f       	subi	r16, 0xFE	; 254
 b90:	1f 4f       	sbci	r17, 0xFF	; 255
 b92:	f3 2d       	mov	r31, r3
 b94:	ff 76       	andi	r31, 0x6F	; 111
 b96:	3f 2e       	mov	r3, r31
 b98:	97 ff       	sbrs	r25, 7
 b9a:	09 c0       	rjmp	.+18     	; 0xbae <vfprintf+0x212>
 b9c:	90 95       	com	r25
 b9e:	80 95       	com	r24
 ba0:	70 95       	com	r23
 ba2:	61 95       	neg	r22
 ba4:	7f 4f       	sbci	r23, 0xFF	; 255
 ba6:	8f 4f       	sbci	r24, 0xFF	; 255
 ba8:	9f 4f       	sbci	r25, 0xFF	; 255
 baa:	f0 68       	ori	r31, 0x80	; 128
 bac:	3f 2e       	mov	r3, r31
 bae:	2a e0       	ldi	r18, 0x0A	; 10
 bb0:	30 e0       	ldi	r19, 0x00	; 0
 bb2:	a3 01       	movw	r20, r6
 bb4:	0e 94 01 07 	call	0xe02	; 0xe02 <__ultoa_invert>
 bb8:	88 2e       	mov	r8, r24
 bba:	86 18       	sub	r8, r6
 bbc:	45 c0       	rjmp	.+138    	; 0xc48 <vfprintf+0x2ac>
 bbe:	85 37       	cpi	r24, 0x75	; 117
 bc0:	31 f4       	brne	.+12     	; 0xbce <vfprintf+0x232>
 bc2:	23 2d       	mov	r18, r3
 bc4:	2f 7e       	andi	r18, 0xEF	; 239
 bc6:	b2 2e       	mov	r11, r18
 bc8:	2a e0       	ldi	r18, 0x0A	; 10
 bca:	30 e0       	ldi	r19, 0x00	; 0
 bcc:	25 c0       	rjmp	.+74     	; 0xc18 <vfprintf+0x27c>
 bce:	93 2d       	mov	r25, r3
 bd0:	99 7f       	andi	r25, 0xF9	; 249
 bd2:	b9 2e       	mov	r11, r25
 bd4:	8f 36       	cpi	r24, 0x6F	; 111
 bd6:	c1 f0       	breq	.+48     	; 0xc08 <vfprintf+0x26c>
 bd8:	18 f4       	brcc	.+6      	; 0xbe0 <vfprintf+0x244>
 bda:	88 35       	cpi	r24, 0x58	; 88
 bdc:	79 f0       	breq	.+30     	; 0xbfc <vfprintf+0x260>
 bde:	b5 c0       	rjmp	.+362    	; 0xd4a <vfprintf+0x3ae>
 be0:	80 37       	cpi	r24, 0x70	; 112
 be2:	19 f0       	breq	.+6      	; 0xbea <vfprintf+0x24e>
 be4:	88 37       	cpi	r24, 0x78	; 120
 be6:	21 f0       	breq	.+8      	; 0xbf0 <vfprintf+0x254>
 be8:	b0 c0       	rjmp	.+352    	; 0xd4a <vfprintf+0x3ae>
 bea:	e9 2f       	mov	r30, r25
 bec:	e0 61       	ori	r30, 0x10	; 16
 bee:	be 2e       	mov	r11, r30
 bf0:	b4 fe       	sbrs	r11, 4
 bf2:	0d c0       	rjmp	.+26     	; 0xc0e <vfprintf+0x272>
 bf4:	fb 2d       	mov	r31, r11
 bf6:	f4 60       	ori	r31, 0x04	; 4
 bf8:	bf 2e       	mov	r11, r31
 bfa:	09 c0       	rjmp	.+18     	; 0xc0e <vfprintf+0x272>
 bfc:	34 fe       	sbrs	r3, 4
 bfe:	0a c0       	rjmp	.+20     	; 0xc14 <vfprintf+0x278>
 c00:	29 2f       	mov	r18, r25
 c02:	26 60       	ori	r18, 0x06	; 6
 c04:	b2 2e       	mov	r11, r18
 c06:	06 c0       	rjmp	.+12     	; 0xc14 <vfprintf+0x278>
 c08:	28 e0       	ldi	r18, 0x08	; 8
 c0a:	30 e0       	ldi	r19, 0x00	; 0
 c0c:	05 c0       	rjmp	.+10     	; 0xc18 <vfprintf+0x27c>
 c0e:	20 e1       	ldi	r18, 0x10	; 16
 c10:	30 e0       	ldi	r19, 0x00	; 0
 c12:	02 c0       	rjmp	.+4      	; 0xc18 <vfprintf+0x27c>
 c14:	20 e1       	ldi	r18, 0x10	; 16
 c16:	32 e0       	ldi	r19, 0x02	; 2
 c18:	f8 01       	movw	r30, r16
 c1a:	b7 fe       	sbrs	r11, 7
 c1c:	07 c0       	rjmp	.+14     	; 0xc2c <vfprintf+0x290>
 c1e:	60 81       	ld	r22, Z
 c20:	71 81       	ldd	r23, Z+1	; 0x01
 c22:	82 81       	ldd	r24, Z+2	; 0x02
 c24:	93 81       	ldd	r25, Z+3	; 0x03
 c26:	0c 5f       	subi	r16, 0xFC	; 252
 c28:	1f 4f       	sbci	r17, 0xFF	; 255
 c2a:	06 c0       	rjmp	.+12     	; 0xc38 <vfprintf+0x29c>
 c2c:	60 81       	ld	r22, Z
 c2e:	71 81       	ldd	r23, Z+1	; 0x01
 c30:	80 e0       	ldi	r24, 0x00	; 0
 c32:	90 e0       	ldi	r25, 0x00	; 0
 c34:	0e 5f       	subi	r16, 0xFE	; 254
 c36:	1f 4f       	sbci	r17, 0xFF	; 255
 c38:	a3 01       	movw	r20, r6
 c3a:	0e 94 01 07 	call	0xe02	; 0xe02 <__ultoa_invert>
 c3e:	88 2e       	mov	r8, r24
 c40:	86 18       	sub	r8, r6
 c42:	fb 2d       	mov	r31, r11
 c44:	ff 77       	andi	r31, 0x7F	; 127
 c46:	3f 2e       	mov	r3, r31
 c48:	36 fe       	sbrs	r3, 6
 c4a:	0d c0       	rjmp	.+26     	; 0xc66 <vfprintf+0x2ca>
 c4c:	23 2d       	mov	r18, r3
 c4e:	2e 7f       	andi	r18, 0xFE	; 254
 c50:	a2 2e       	mov	r10, r18
 c52:	89 14       	cp	r8, r9
 c54:	58 f4       	brcc	.+22     	; 0xc6c <vfprintf+0x2d0>
 c56:	34 fe       	sbrs	r3, 4
 c58:	0b c0       	rjmp	.+22     	; 0xc70 <vfprintf+0x2d4>
 c5a:	32 fc       	sbrc	r3, 2
 c5c:	09 c0       	rjmp	.+18     	; 0xc70 <vfprintf+0x2d4>
 c5e:	83 2d       	mov	r24, r3
 c60:	8e 7e       	andi	r24, 0xEE	; 238
 c62:	a8 2e       	mov	r10, r24
 c64:	05 c0       	rjmp	.+10     	; 0xc70 <vfprintf+0x2d4>
 c66:	b8 2c       	mov	r11, r8
 c68:	a3 2c       	mov	r10, r3
 c6a:	03 c0       	rjmp	.+6      	; 0xc72 <vfprintf+0x2d6>
 c6c:	b8 2c       	mov	r11, r8
 c6e:	01 c0       	rjmp	.+2      	; 0xc72 <vfprintf+0x2d6>
 c70:	b9 2c       	mov	r11, r9
 c72:	a4 fe       	sbrs	r10, 4
 c74:	0f c0       	rjmp	.+30     	; 0xc94 <vfprintf+0x2f8>
 c76:	fe 01       	movw	r30, r28
 c78:	e8 0d       	add	r30, r8
 c7a:	f1 1d       	adc	r31, r1
 c7c:	80 81       	ld	r24, Z
 c7e:	80 33       	cpi	r24, 0x30	; 48
 c80:	21 f4       	brne	.+8      	; 0xc8a <vfprintf+0x2ee>
 c82:	9a 2d       	mov	r25, r10
 c84:	99 7e       	andi	r25, 0xE9	; 233
 c86:	a9 2e       	mov	r10, r25
 c88:	09 c0       	rjmp	.+18     	; 0xc9c <vfprintf+0x300>
 c8a:	a2 fe       	sbrs	r10, 2
 c8c:	06 c0       	rjmp	.+12     	; 0xc9a <vfprintf+0x2fe>
 c8e:	b3 94       	inc	r11
 c90:	b3 94       	inc	r11
 c92:	04 c0       	rjmp	.+8      	; 0xc9c <vfprintf+0x300>
 c94:	8a 2d       	mov	r24, r10
 c96:	86 78       	andi	r24, 0x86	; 134
 c98:	09 f0       	breq	.+2      	; 0xc9c <vfprintf+0x300>
 c9a:	b3 94       	inc	r11
 c9c:	a3 fc       	sbrc	r10, 3
 c9e:	11 c0       	rjmp	.+34     	; 0xcc2 <vfprintf+0x326>
 ca0:	a0 fe       	sbrs	r10, 0
 ca2:	06 c0       	rjmp	.+12     	; 0xcb0 <vfprintf+0x314>
 ca4:	b2 14       	cp	r11, r2
 ca6:	88 f4       	brcc	.+34     	; 0xcca <vfprintf+0x32e>
 ca8:	28 0c       	add	r2, r8
 caa:	92 2c       	mov	r9, r2
 cac:	9b 18       	sub	r9, r11
 cae:	0e c0       	rjmp	.+28     	; 0xccc <vfprintf+0x330>
 cb0:	b2 14       	cp	r11, r2
 cb2:	60 f4       	brcc	.+24     	; 0xccc <vfprintf+0x330>
 cb4:	b6 01       	movw	r22, r12
 cb6:	80 e2       	ldi	r24, 0x20	; 32
 cb8:	90 e0       	ldi	r25, 0x00	; 0
 cba:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 cbe:	b3 94       	inc	r11
 cc0:	f7 cf       	rjmp	.-18     	; 0xcb0 <vfprintf+0x314>
 cc2:	b2 14       	cp	r11, r2
 cc4:	18 f4       	brcc	.+6      	; 0xccc <vfprintf+0x330>
 cc6:	2b 18       	sub	r2, r11
 cc8:	02 c0       	rjmp	.+4      	; 0xcce <vfprintf+0x332>
 cca:	98 2c       	mov	r9, r8
 ccc:	21 2c       	mov	r2, r1
 cce:	a4 fe       	sbrs	r10, 4
 cd0:	10 c0       	rjmp	.+32     	; 0xcf2 <vfprintf+0x356>
 cd2:	b6 01       	movw	r22, r12
 cd4:	80 e3       	ldi	r24, 0x30	; 48
 cd6:	90 e0       	ldi	r25, 0x00	; 0
 cd8:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 cdc:	a2 fe       	sbrs	r10, 2
 cde:	17 c0       	rjmp	.+46     	; 0xd0e <vfprintf+0x372>
 ce0:	a1 fc       	sbrc	r10, 1
 ce2:	03 c0       	rjmp	.+6      	; 0xcea <vfprintf+0x34e>
 ce4:	88 e7       	ldi	r24, 0x78	; 120
 ce6:	90 e0       	ldi	r25, 0x00	; 0
 ce8:	02 c0       	rjmp	.+4      	; 0xcee <vfprintf+0x352>
 cea:	88 e5       	ldi	r24, 0x58	; 88
 cec:	90 e0       	ldi	r25, 0x00	; 0
 cee:	b6 01       	movw	r22, r12
 cf0:	0c c0       	rjmp	.+24     	; 0xd0a <vfprintf+0x36e>
 cf2:	8a 2d       	mov	r24, r10
 cf4:	86 78       	andi	r24, 0x86	; 134
 cf6:	59 f0       	breq	.+22     	; 0xd0e <vfprintf+0x372>
 cf8:	a1 fe       	sbrs	r10, 1
 cfa:	02 c0       	rjmp	.+4      	; 0xd00 <vfprintf+0x364>
 cfc:	8b e2       	ldi	r24, 0x2B	; 43
 cfe:	01 c0       	rjmp	.+2      	; 0xd02 <vfprintf+0x366>
 d00:	80 e2       	ldi	r24, 0x20	; 32
 d02:	a7 fc       	sbrc	r10, 7
 d04:	8d e2       	ldi	r24, 0x2D	; 45
 d06:	b6 01       	movw	r22, r12
 d08:	90 e0       	ldi	r25, 0x00	; 0
 d0a:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 d0e:	89 14       	cp	r8, r9
 d10:	38 f4       	brcc	.+14     	; 0xd20 <vfprintf+0x384>
 d12:	b6 01       	movw	r22, r12
 d14:	80 e3       	ldi	r24, 0x30	; 48
 d16:	90 e0       	ldi	r25, 0x00	; 0
 d18:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 d1c:	9a 94       	dec	r9
 d1e:	f7 cf       	rjmp	.-18     	; 0xd0e <vfprintf+0x372>
 d20:	8a 94       	dec	r8
 d22:	f3 01       	movw	r30, r6
 d24:	e8 0d       	add	r30, r8
 d26:	f1 1d       	adc	r31, r1
 d28:	80 81       	ld	r24, Z
 d2a:	b6 01       	movw	r22, r12
 d2c:	90 e0       	ldi	r25, 0x00	; 0
 d2e:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 d32:	81 10       	cpse	r8, r1
 d34:	f5 cf       	rjmp	.-22     	; 0xd20 <vfprintf+0x384>
 d36:	22 20       	and	r2, r2
 d38:	09 f4       	brne	.+2      	; 0xd3c <vfprintf+0x3a0>
 d3a:	42 ce       	rjmp	.-892    	; 0x9c0 <vfprintf+0x24>
 d3c:	b6 01       	movw	r22, r12
 d3e:	80 e2       	ldi	r24, 0x20	; 32
 d40:	90 e0       	ldi	r25, 0x00	; 0
 d42:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 d46:	2a 94       	dec	r2
 d48:	f6 cf       	rjmp	.-20     	; 0xd36 <vfprintf+0x39a>
 d4a:	f6 01       	movw	r30, r12
 d4c:	86 81       	ldd	r24, Z+6	; 0x06
 d4e:	97 81       	ldd	r25, Z+7	; 0x07
 d50:	02 c0       	rjmp	.+4      	; 0xd56 <vfprintf+0x3ba>
 d52:	8f ef       	ldi	r24, 0xFF	; 255
 d54:	9f ef       	ldi	r25, 0xFF	; 255
 d56:	2b 96       	adiw	r28, 0x0b	; 11
 d58:	e2 e1       	ldi	r30, 0x12	; 18
 d5a:	0c 94 7b 07 	jmp	0xef6	; 0xef6 <__epilogue_restores__>

00000d5e <strnlen_P>:
 d5e:	fc 01       	movw	r30, r24
 d60:	05 90       	lpm	r0, Z+
 d62:	61 50       	subi	r22, 0x01	; 1
 d64:	70 40       	sbci	r23, 0x00	; 0
 d66:	01 10       	cpse	r0, r1
 d68:	d8 f7       	brcc	.-10     	; 0xd60 <strnlen_P+0x2>
 d6a:	80 95       	com	r24
 d6c:	90 95       	com	r25
 d6e:	8e 0f       	add	r24, r30
 d70:	9f 1f       	adc	r25, r31
 d72:	08 95       	ret

00000d74 <strnlen>:
 d74:	fc 01       	movw	r30, r24
 d76:	61 50       	subi	r22, 0x01	; 1
 d78:	70 40       	sbci	r23, 0x00	; 0
 d7a:	01 90       	ld	r0, Z+
 d7c:	01 10       	cpse	r0, r1
 d7e:	d8 f7       	brcc	.-10     	; 0xd76 <strnlen+0x2>
 d80:	80 95       	com	r24
 d82:	90 95       	com	r25
 d84:	8e 0f       	add	r24, r30
 d86:	9f 1f       	adc	r25, r31
 d88:	08 95       	ret

00000d8a <fputc>:
 d8a:	0f 93       	push	r16
 d8c:	1f 93       	push	r17
 d8e:	cf 93       	push	r28
 d90:	df 93       	push	r29
 d92:	fb 01       	movw	r30, r22
 d94:	23 81       	ldd	r18, Z+3	; 0x03
 d96:	21 fd       	sbrc	r18, 1
 d98:	03 c0       	rjmp	.+6      	; 0xda0 <fputc+0x16>
 d9a:	8f ef       	ldi	r24, 0xFF	; 255
 d9c:	9f ef       	ldi	r25, 0xFF	; 255
 d9e:	2c c0       	rjmp	.+88     	; 0xdf8 <fputc+0x6e>
 da0:	22 ff       	sbrs	r18, 2
 da2:	16 c0       	rjmp	.+44     	; 0xdd0 <fputc+0x46>
 da4:	46 81       	ldd	r20, Z+6	; 0x06
 da6:	57 81       	ldd	r21, Z+7	; 0x07
 da8:	24 81       	ldd	r18, Z+4	; 0x04
 daa:	35 81       	ldd	r19, Z+5	; 0x05
 dac:	42 17       	cp	r20, r18
 dae:	53 07       	cpc	r21, r19
 db0:	44 f4       	brge	.+16     	; 0xdc2 <fputc+0x38>
 db2:	a0 81       	ld	r26, Z
 db4:	b1 81       	ldd	r27, Z+1	; 0x01
 db6:	9d 01       	movw	r18, r26
 db8:	2f 5f       	subi	r18, 0xFF	; 255
 dba:	3f 4f       	sbci	r19, 0xFF	; 255
 dbc:	31 83       	std	Z+1, r19	; 0x01
 dbe:	20 83       	st	Z, r18
 dc0:	8c 93       	st	X, r24
 dc2:	26 81       	ldd	r18, Z+6	; 0x06
 dc4:	37 81       	ldd	r19, Z+7	; 0x07
 dc6:	2f 5f       	subi	r18, 0xFF	; 255
 dc8:	3f 4f       	sbci	r19, 0xFF	; 255
 dca:	37 83       	std	Z+7, r19	; 0x07
 dcc:	26 83       	std	Z+6, r18	; 0x06
 dce:	14 c0       	rjmp	.+40     	; 0xdf8 <fputc+0x6e>
 dd0:	8b 01       	movw	r16, r22
 dd2:	ec 01       	movw	r28, r24
 dd4:	fb 01       	movw	r30, r22
 dd6:	00 84       	ldd	r0, Z+8	; 0x08
 dd8:	f1 85       	ldd	r31, Z+9	; 0x09
 dda:	e0 2d       	mov	r30, r0
 ddc:	09 95       	icall
 dde:	89 2b       	or	r24, r25
 de0:	e1 f6       	brne	.-72     	; 0xd9a <fputc+0x10>
 de2:	d8 01       	movw	r26, r16
 de4:	16 96       	adiw	r26, 0x06	; 6
 de6:	8d 91       	ld	r24, X+
 de8:	9c 91       	ld	r25, X
 dea:	17 97       	sbiw	r26, 0x07	; 7
 dec:	01 96       	adiw	r24, 0x01	; 1
 dee:	17 96       	adiw	r26, 0x07	; 7
 df0:	9c 93       	st	X, r25
 df2:	8e 93       	st	-X, r24
 df4:	16 97       	sbiw	r26, 0x06	; 6
 df6:	ce 01       	movw	r24, r28
 df8:	df 91       	pop	r29
 dfa:	cf 91       	pop	r28
 dfc:	1f 91       	pop	r17
 dfe:	0f 91       	pop	r16
 e00:	08 95       	ret

00000e02 <__ultoa_invert>:
 e02:	fa 01       	movw	r30, r20
 e04:	aa 27       	eor	r26, r26
 e06:	28 30       	cpi	r18, 0x08	; 8
 e08:	51 f1       	breq	.+84     	; 0xe5e <__ultoa_invert+0x5c>
 e0a:	20 31       	cpi	r18, 0x10	; 16
 e0c:	81 f1       	breq	.+96     	; 0xe6e <__ultoa_invert+0x6c>
 e0e:	e8 94       	clt
 e10:	6f 93       	push	r22
 e12:	6e 7f       	andi	r22, 0xFE	; 254
 e14:	6e 5f       	subi	r22, 0xFE	; 254
 e16:	7f 4f       	sbci	r23, 0xFF	; 255
 e18:	8f 4f       	sbci	r24, 0xFF	; 255
 e1a:	9f 4f       	sbci	r25, 0xFF	; 255
 e1c:	af 4f       	sbci	r26, 0xFF	; 255
 e1e:	b1 e0       	ldi	r27, 0x01	; 1
 e20:	3e d0       	rcall	.+124    	; 0xe9e <__ultoa_invert+0x9c>
 e22:	b4 e0       	ldi	r27, 0x04	; 4
 e24:	3c d0       	rcall	.+120    	; 0xe9e <__ultoa_invert+0x9c>
 e26:	67 0f       	add	r22, r23
 e28:	78 1f       	adc	r23, r24
 e2a:	89 1f       	adc	r24, r25
 e2c:	9a 1f       	adc	r25, r26
 e2e:	a1 1d       	adc	r26, r1
 e30:	68 0f       	add	r22, r24
 e32:	79 1f       	adc	r23, r25
 e34:	8a 1f       	adc	r24, r26
 e36:	91 1d       	adc	r25, r1
 e38:	a1 1d       	adc	r26, r1
 e3a:	6a 0f       	add	r22, r26
 e3c:	71 1d       	adc	r23, r1
 e3e:	81 1d       	adc	r24, r1
 e40:	91 1d       	adc	r25, r1
 e42:	a1 1d       	adc	r26, r1
 e44:	20 d0       	rcall	.+64     	; 0xe86 <__ultoa_invert+0x84>
 e46:	09 f4       	brne	.+2      	; 0xe4a <__ultoa_invert+0x48>
 e48:	68 94       	set
 e4a:	3f 91       	pop	r19
 e4c:	2a e0       	ldi	r18, 0x0A	; 10
 e4e:	26 9f       	mul	r18, r22
 e50:	11 24       	eor	r1, r1
 e52:	30 19       	sub	r19, r0
 e54:	30 5d       	subi	r19, 0xD0	; 208
 e56:	31 93       	st	Z+, r19
 e58:	de f6       	brtc	.-74     	; 0xe10 <__ultoa_invert+0xe>
 e5a:	cf 01       	movw	r24, r30
 e5c:	08 95       	ret
 e5e:	46 2f       	mov	r20, r22
 e60:	47 70       	andi	r20, 0x07	; 7
 e62:	40 5d       	subi	r20, 0xD0	; 208
 e64:	41 93       	st	Z+, r20
 e66:	b3 e0       	ldi	r27, 0x03	; 3
 e68:	0f d0       	rcall	.+30     	; 0xe88 <__ultoa_invert+0x86>
 e6a:	c9 f7       	brne	.-14     	; 0xe5e <__ultoa_invert+0x5c>
 e6c:	f6 cf       	rjmp	.-20     	; 0xe5a <__ultoa_invert+0x58>
 e6e:	46 2f       	mov	r20, r22
 e70:	4f 70       	andi	r20, 0x0F	; 15
 e72:	40 5d       	subi	r20, 0xD0	; 208
 e74:	4a 33       	cpi	r20, 0x3A	; 58
 e76:	18 f0       	brcs	.+6      	; 0xe7e <__ultoa_invert+0x7c>
 e78:	49 5d       	subi	r20, 0xD9	; 217
 e7a:	31 fd       	sbrc	r19, 1
 e7c:	40 52       	subi	r20, 0x20	; 32
 e7e:	41 93       	st	Z+, r20
 e80:	02 d0       	rcall	.+4      	; 0xe86 <__ultoa_invert+0x84>
 e82:	a9 f7       	brne	.-22     	; 0xe6e <__ultoa_invert+0x6c>
 e84:	ea cf       	rjmp	.-44     	; 0xe5a <__ultoa_invert+0x58>
 e86:	b4 e0       	ldi	r27, 0x04	; 4
 e88:	a6 95       	lsr	r26
 e8a:	97 95       	ror	r25
 e8c:	87 95       	ror	r24
 e8e:	77 95       	ror	r23
 e90:	67 95       	ror	r22
 e92:	ba 95       	dec	r27
 e94:	c9 f7       	brne	.-14     	; 0xe88 <__ultoa_invert+0x86>
 e96:	00 97       	sbiw	r24, 0x00	; 0
 e98:	61 05       	cpc	r22, r1
 e9a:	71 05       	cpc	r23, r1
 e9c:	08 95       	ret
 e9e:	9b 01       	movw	r18, r22
 ea0:	ac 01       	movw	r20, r24
 ea2:	0a 2e       	mov	r0, r26
 ea4:	06 94       	lsr	r0
 ea6:	57 95       	ror	r21
 ea8:	47 95       	ror	r20
 eaa:	37 95       	ror	r19
 eac:	27 95       	ror	r18
 eae:	ba 95       	dec	r27
 eb0:	c9 f7       	brne	.-14     	; 0xea4 <__ultoa_invert+0xa2>
 eb2:	62 0f       	add	r22, r18
 eb4:	73 1f       	adc	r23, r19
 eb6:	84 1f       	adc	r24, r20
 eb8:	95 1f       	adc	r25, r21
 eba:	a0 1d       	adc	r26, r0
 ebc:	08 95       	ret

00000ebe <__prologue_saves__>:
 ebe:	2f 92       	push	r2
 ec0:	3f 92       	push	r3
 ec2:	4f 92       	push	r4
 ec4:	5f 92       	push	r5
 ec6:	6f 92       	push	r6
 ec8:	7f 92       	push	r7
 eca:	8f 92       	push	r8
 ecc:	9f 92       	push	r9
 ece:	af 92       	push	r10
 ed0:	bf 92       	push	r11
 ed2:	cf 92       	push	r12
 ed4:	df 92       	push	r13
 ed6:	ef 92       	push	r14
 ed8:	ff 92       	push	r15
 eda:	0f 93       	push	r16
 edc:	1f 93       	push	r17
 ede:	cf 93       	push	r28
 ee0:	df 93       	push	r29
 ee2:	cd b7       	in	r28, 0x3d	; 61
 ee4:	de b7       	in	r29, 0x3e	; 62
 ee6:	ca 1b       	sub	r28, r26
 ee8:	db 0b       	sbc	r29, r27
 eea:	0f b6       	in	r0, 0x3f	; 63
 eec:	f8 94       	cli
 eee:	de bf       	out	0x3e, r29	; 62
 ef0:	0f be       	out	0x3f, r0	; 63
 ef2:	cd bf       	out	0x3d, r28	; 61
 ef4:	09 94       	ijmp

00000ef6 <__epilogue_restores__>:
 ef6:	2a 88       	ldd	r2, Y+18	; 0x12
 ef8:	39 88       	ldd	r3, Y+17	; 0x11
 efa:	48 88       	ldd	r4, Y+16	; 0x10
 efc:	5f 84       	ldd	r5, Y+15	; 0x0f
 efe:	6e 84       	ldd	r6, Y+14	; 0x0e
 f00:	7d 84       	ldd	r7, Y+13	; 0x0d
 f02:	8c 84       	ldd	r8, Y+12	; 0x0c
 f04:	9b 84       	ldd	r9, Y+11	; 0x0b
 f06:	aa 84       	ldd	r10, Y+10	; 0x0a
 f08:	b9 84       	ldd	r11, Y+9	; 0x09
 f0a:	c8 84       	ldd	r12, Y+8	; 0x08
 f0c:	df 80       	ldd	r13, Y+7	; 0x07
 f0e:	ee 80       	ldd	r14, Y+6	; 0x06
 f10:	fd 80       	ldd	r15, Y+5	; 0x05
 f12:	0c 81       	ldd	r16, Y+4	; 0x04
 f14:	1b 81       	ldd	r17, Y+3	; 0x03
 f16:	aa 81       	ldd	r26, Y+2	; 0x02
 f18:	b9 81       	ldd	r27, Y+1	; 0x01
 f1a:	ce 0f       	add	r28, r30
 f1c:	d1 1d       	adc	r29, r1
 f1e:	0f b6       	in	r0, 0x3f	; 63
 f20:	f8 94       	cli
 f22:	de bf       	out	0x3e, r29	; 62
 f24:	0f be       	out	0x3f, r0	; 63
 f26:	cd bf       	out	0x3d, r28	; 61
 f28:	ed 01       	movw	r28, r26
 f2a:	08 95       	ret

00000f2c <_exit>:
 f2c:	f8 94       	cli

00000f2e <__stop_program>:
 f2e:	ff cf       	rjmp	.-2      	; 0xf2e <__stop_program>
